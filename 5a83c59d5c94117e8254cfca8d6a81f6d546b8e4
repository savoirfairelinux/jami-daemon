{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "912c8647_80222238",
        "filename": "src/connectivity/multiplexed_socket.cpp",
        "patchSetId": 2
      },
      "lineNbr": 687,
      "author": {
        "id": 5
      },
      "writtenOn": "2023-05-09T20:50:37Z",
      "side": 1,
      "message": "MINOR SonarQube violation:\n\n\n\u0027find\u0027 called with a string literal consisting of a single character; consider using the more effective overload accepting a character\n\n\nRead more: https://sonar-jami.savoirfairelinux.net/coding_rules#rule_key\u003dClangTidy%3Aperformance-faster-string-find",
      "tag": "autogenerated:sonar",
      "revId": "5a83c59d5c94117e8254cfca8d6a81f6d546b8e4",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a55e6433_b4e4d3b8",
        "filename": "src/connectivity/multiplexed_socket.cpp",
        "patchSetId": 2
      },
      "lineNbr": 687,
      "author": {
        "id": 220
      },
      "writtenOn": "2023-06-16T12:52:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "912c8647_80222238",
      "revId": "5a83c59d5c94117e8254cfca8d6a81f6d546b8e4",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1978a4d_61d4d36e",
        "filename": "src/connectivity/multiplexed_socket.cpp",
        "patchSetId": 2
      },
      "lineNbr": 688,
      "author": {
        "id": 5
      },
      "writtenOn": "2023-05-09T20:50:37Z",
      "side": 1,
      "message": "MINOR SonarQube violation:\n\n\n\u0027find\u0027 called with a string literal consisting of a single character; consider using the more effective overload accepting a character\n\n\nRead more: https://sonar-jami.savoirfairelinux.net/coding_rules#rule_key\u003dClangTidy%3Aperformance-faster-string-find",
      "tag": "autogenerated:sonar",
      "revId": "5a83c59d5c94117e8254cfca8d6a81f6d546b8e4",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a02138d2_b6f179fe",
        "filename": "src/connectivity/multiplexed_socket.cpp",
        "patchSetId": 2
      },
      "lineNbr": 688,
      "author": {
        "id": 220
      },
      "writtenOn": "2023-06-16T12:52:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f1978a4d_61d4d36e",
      "revId": "5a83c59d5c94117e8254cfca8d6a81f6d546b8e4",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbde9092_a110508c",
        "filename": "src/connectivity/multiplexed_socket.cpp",
        "patchSetId": 2
      },
      "lineNbr": 694,
      "author": {
        "id": 5
      },
      "writtenOn": "2023-05-09T20:50:37Z",
      "side": 1,
      "message": "MINOR SonarQube violation:\n\n\nan integer is interpreted as a character code when assigning it to a string; if this is intended, cast the integer to the appropriate character type; if you want a string representation, use the appropriate conversion facility\n\n\nRead more: https://sonar-jami.savoirfairelinux.net/coding_rules#rule_key\u003dClangTidy%3Abugprone-string-integer-assignment",
      "tag": "autogenerated:sonar",
      "revId": "5a83c59d5c94117e8254cfca8d6a81f6d546b8e4",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04ca3fc5_623327d5",
        "filename": "src/connectivity/multiplexed_socket.cpp",
        "patchSetId": 2
      },
      "lineNbr": 694,
      "author": {
        "id": 220
      },
      "writtenOn": "2023-06-16T12:52:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dbde9092_a110508c",
      "revId": "5a83c59d5c94117e8254cfca8d6a81f6d546b8e4",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40e59083_d1bfe808",
        "filename": "src/connectivity/multiplexed_socket.cpp",
        "patchSetId": 2
      },
      "lineNbr": 718,
      "author": {
        "id": 5
      },
      "writtenOn": "2023-05-09T20:50:37Z",
      "side": 1,
      "message": "MINOR SonarQube violation:\n\n\nan integer is interpreted as a character code when assigning it to a string; if this is intended, cast the integer to the appropriate character type; if you want a string representation, use the appropriate conversion facility\n\n\nRead more: https://sonar-jami.savoirfairelinux.net/coding_rules#rule_key\u003dClangTidy%3Abugprone-string-integer-assignment",
      "tag": "autogenerated:sonar",
      "revId": "5a83c59d5c94117e8254cfca8d6a81f6d546b8e4",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ade7fa3e_48056d1f",
        "filename": "src/connectivity/multiplexed_socket.cpp",
        "patchSetId": 2
      },
      "lineNbr": 718,
      "author": {
        "id": 997
      },
      "writtenOn": "2023-06-19T18:49:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "40e59083_d1bfe808",
      "revId": "5a83c59d5c94117e8254cfca8d6a81f6d546b8e4",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fddc7e2c_1c67eb80",
        "filename": "src/connectivity/multiplexed_socket.cpp",
        "patchSetId": 2
      },
      "lineNbr": 720,
      "author": {
        "id": 5
      },
      "writtenOn": "2023-05-09T20:50:37Z",
      "side": 1,
      "message": "MINOR SonarQube violation:\n\n\nan integer is interpreted as a character code when assigning it to a string; if this is intended, cast the integer to the appropriate character type; if you want a string representation, use the appropriate conversion facility\n\n\nRead more: https://sonar-jami.savoirfairelinux.net/coding_rules#rule_key\u003dClangTidy%3Abugprone-string-integer-assignment",
      "tag": "autogenerated:sonar",
      "revId": "5a83c59d5c94117e8254cfca8d6a81f6d546b8e4",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "69f107cb_acf6e8e0",
        "filename": "src/connectivity/multiplexed_socket.cpp",
        "patchSetId": 2
      },
      "lineNbr": 720,
      "author": {
        "id": 997
      },
      "writtenOn": "2023-06-19T18:49:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fddc7e2c_1c67eb80",
      "revId": "5a83c59d5c94117e8254cfca8d6a81f6d546b8e4",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2659e565_2736d528",
        "filename": "src/connectivity/multiplexed_socket.cpp",
        "patchSetId": 2
      },
      "lineNbr": 725,
      "author": {
        "id": 5
      },
      "writtenOn": "2023-05-09T20:50:37Z",
      "side": 1,
      "message": "CRITICAL SonarQube violation:\n\n\ncontrol may reach end of non-void function\n\n\nRead more: https://sonar-jami.savoirfairelinux.net/coding_rules#rule_key\u003dClangTidy%3Aclang-diagnostic-return-type",
      "tag": "autogenerated:sonar",
      "revId": "5a83c59d5c94117e8254cfca8d6a81f6d546b8e4",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd89f88a_50f5abe9",
        "filename": "src/connectivity/multiplexed_socket.cpp",
        "patchSetId": 2
      },
      "lineNbr": 725,
      "author": {
        "id": 997
      },
      "writtenOn": "2023-06-19T18:52:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2659e565_2736d528",
      "revId": "5a83c59d5c94117e8254cfca8d6a81f6d546b8e4",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    }
  ]
}