{
  "comments": [
    {
      "key": {
        "uuid": "7ea9a734_01cd8b22",
        "filename": "src/jamidht/jamiaccount.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2394,
      "author": {
        "id": 220
      },
      "writtenOn": "2020-04-22T14:56:23Z",
      "side": 1,
      "message": "Seems to block the initialization there:\n\nThread 6 (Thread 0x7ffff463f700 (LWP 400866)):\n#0  0x00007ffff795e610 in __lll_lock_wait () from /lib64/libpthread.so.0\n#1  0x00007ffff7956f53 in pthread_mutex_lock () from /lib64/libpthread.so.0\n#2  0x00000000004f1a73 in __gthread_mutex_lock (__mutex\u003d0x7fffe40015a0) at /usr/include/c++/9/x86_64-redhat-linux/bits/gthr-default.h:749\n#3  0x00000000004f1b9e in std::mutex::lock (this\u003d0x7fffe40015a0) at /usr/include/c++/9/bits/std_mutex.h:100\n#4  0x00000000004f1fde in std::lock_guard\u003cstd::mutex\u003e::lock_guard (this\u003d0x7ffff463c318, __m\u003d...) at /usr/include/c++/9/bits/std_mutex.h:159\n#5  0x0000000000567055 in jami::JamiAccount::getKnownDevices[abi:cxx11]() const (this\u003d0x7fffe4000b70) at jamiaccount.cpp:2394\n#6  0x000000000055b3d6 in jami::JamiAccount::\u003clambda()\u003e::operator()(void) const (__closure\u003d0x7fffe40045a8) at jamiaccount.cpp:1058\n#7  0x00000000005765cc in std::_Function_handler\u003cvoid(), jami::JamiAccount::loadAccount(const string\u0026, const string\u0026, const string\u0026)::\u003clambda()\u003e \u003e::_M_invoke(const std::_Any_data \u0026) (__functor\u003d...) at /usr/include/c++/9/bits/std_function.h:300\n#8  0x00000000004e09a4 in std::function\u003cvoid ()\u003e::operator()() const (this\u003d0x7fffe40045a8) at /usr/include/c++/9/bits/std_function.h:688\n--Type \u003cRET\u003e for more, q to quit, c to continue without paging--\n#9  0x000000000087686b in jami::ContactList::foundAccountDevice (this\u003d0x7fffe4004400, crt\u003dstd::shared_ptr\u003cdht::crypto::Certificate\u003e (use count 3, weak count 0) \u003d {...}, name\u003d\"tars3\", updated\u003d...) at contact_list.cpp:398\n#10 0x0000000000875e80 in jami::ContactList::loadKnownDevices (this\u003d0x7fffe4004400) at contact_list.cpp:334\n#11 0x0000000000873e40 in jami::ContactList::load (this\u003d0x7fffe4004400) at contact_list.cpp:43\n#12 0x000000000081a4cb in jami::AccountManager::useIdentity (this\u003d0x7fffe40063d0, identity\u003d{...}, receipt\u003d\"{\\\"id\\\":\\\"a28b024c5ce06b97cedb64040c609de2cc507216\\\",\\\"dev\\\":\\\"161c38b5aac32377aef58c6553fa1be863adc216\\\",\\\"eth\\\":\\\"0aa432e5d6c2313eabe781ac2bbf55cb0c4610f0\\\",\\\"announce\\\":\\\"gqJpZACjZGF0gqRib2R5hKNzZXEApW93bmVyxQImM\"..., receiptSignature\u003dstd::vector of length 512, capacity 512 \u003d {...}, username\u003d\"\", onChange\u003d...) at account_manager.cpp:157\n#13 0x000000000055c810 in jami::JamiAccount::loadAccount (this\u003d0x7fffe4000b70, archive_password\u003d\"\", archive_pin\u003d\"\", archive_path\u003d\"\") at jamiaccount.cpp:1083\n#14 0x0000000000559cb0 in jami::JamiAccount::unserialize (this\u003d0x7fffe4000b70, node\u003d...) at jamiaccount.cpp:949\n#15 0x00000000006aecce in jami::Manager::\u003clambda()\u003e::operator()(void) const (__closure\u003d0x1ac1820) at manager.cpp:2778\n#16 0x00000000006b34d7 in std::_Function_handler\u003cvoid(), jami::Manager::loadAccountMap(const YAML::Node\u0026)::\u003clambda()\u003e \u003e::_M_invoke(const std::_Any_data \u0026) (__functor\u003d...) at /usr/include/c++/9/bits/std_function.h:300\n#17 0x0000000000973456 in std::thread::_State_impl\u003cstd::thread::_Invoker\u003cstd::tuple\u003cdht::ThreadPool::run(std::function\u003cvoid ()\u003e\u0026\u0026)::{lambda()#1}\u003e \u003e \u003e::_M_run() ()\n#18 0x00007ffff73023d4 in execute_native_thread_routine () from /lib64/libstdc++.so.6\n#19 0x00007ffff79544e2 in start_thread () from /lib64/libpthread.so.0\n#20 0x00007ffff70036a3 in clone () from /lib64/libc.so.6",
      "range": {
        "startLine": 2393,
        "startChar": 1,
        "endLine": 2394,
        "endChar": 58
      },
      "revId": "ca60839d0f3ddcc343061f802f46ed7a9f25035f",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": true
    }
  ]
}