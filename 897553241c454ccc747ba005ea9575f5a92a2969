{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "df2710c8_d256c6ed",
        "filename": "contrib/src/ffmpeg/pipewiregrab-source-filter.patch",
        "patchSetId": 27
      },
      "lineNbr": 34,
      "author": {
        "id": 1059
      },
      "writtenOn": "2024-03-14T13:44:01Z",
      "side": 1,
      "message": "Lets try to fix this as this was one of the review comment from FFMPEG community.",
      "revId": "897553241c454ccc747ba005ea9575f5a92a2969",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb1e46c3_cb8a9354",
        "filename": "contrib/src/ffmpeg/pipewiregrab-source-filter.patch",
        "patchSetId": 27
      },
      "lineNbr": 34,
      "author": {
        "id": 1035
      },
      "writtenOn": "2024-03-14T14:33:14Z",
      "side": 1,
      "message": "If you look at patchset 28 you\u0027ll see I added a comment to explain this. I\u0027m not sure there\u0027s more we can do to fix it (cf. my messages about this on Mattermost from yesterday).",
      "parentUuid": "df2710c8_d256c6ed",
      "revId": "897553241c454ccc747ba005ea9575f5a92a2969",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1af103eb_64fe76d9",
        "filename": "contrib/src/ffmpeg/pipewiregrab-source-filter.patch",
        "patchSetId": 27
      },
      "lineNbr": 156,
      "author": {
        "id": 1059
      },
      "writtenOn": "2024-03-14T13:44:01Z",
      "side": 1,
      "message": "Are we supporting window capture in this release?",
      "range": {
        "startLine": 156,
        "startChar": 5,
        "endLine": 156,
        "endChar": 20
      },
      "revId": "897553241c454ccc747ba005ea9575f5a92a2969",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c6186d99_e757d104",
        "filename": "contrib/src/ffmpeg/pipewiregrab-source-filter.patch",
        "patchSetId": 27
      },
      "lineNbr": 156,
      "author": {
        "id": 1035
      },
      "writtenOn": "2024-03-14T14:33:14Z",
      "side": 1,
      "message": "Yes! That\u0027s the purpose of the \"capture_type\" option. You can try window capture with the following command:\nffplay -f lavfi -i pipewiregrab\u003dcapture_type\u003d2",
      "parentUuid": "1af103eb_64fe76d9",
      "range": {
        "startLine": 156,
        "startChar": 5,
        "endLine": 156,
        "endChar": 20
      },
      "revId": "897553241c454ccc747ba005ea9575f5a92a2969",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0355a122_d9d316d0",
        "filename": "contrib/src/ffmpeg/pipewiregrab-source-filter.patch",
        "patchSetId": 27
      },
      "lineNbr": 165,
      "author": {
        "id": 1059
      },
      "writtenOn": "2024-03-14T13:44:01Z",
      "side": 1,
      "message": "Remove METEDATA if it is not used.",
      "range": {
        "startLine": 165,
        "startChar": 5,
        "endLine": 165,
        "endChar": 32
      },
      "revId": "897553241c454ccc747ba005ea9575f5a92a2969",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f676b730_0557d448",
        "filename": "contrib/src/ffmpeg/pipewiregrab-source-filter.patch",
        "patchSetId": 27
      },
      "lineNbr": 165,
      "author": {
        "id": 1035
      },
      "writtenOn": "2024-03-14T16:54:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0355a122_d9d316d0",
      "range": {
        "startLine": 165,
        "startChar": 5,
        "endLine": 165,
        "endChar": 32
      },
      "revId": "897553241c454ccc747ba005ea9575f5a92a2969",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5698af9_b249299c",
        "filename": "contrib/src/ffmpeg/pipewiregrab-source-filter.patch",
        "patchSetId": 27
      },
      "lineNbr": 242,
      "author": {
        "id": 1059
      },
      "writtenOn": "2024-03-14T13:44:01Z",
      "side": 1,
      "message": "Do we really need this?",
      "range": {
        "startLine": 242,
        "startChar": 66,
        "endLine": 242,
        "endChar": 77
      },
      "revId": "897553241c454ccc747ba005ea9575f5a92a2969",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a39beea_aa8c64f2",
        "filename": "contrib/src/ffmpeg/pipewiregrab-source-filter.patch",
        "patchSetId": 27
      },
      "lineNbr": 242,
      "author": {
        "id": 1035
      },
      "writtenOn": "2024-03-14T14:33:14Z",
      "side": 1,
      "message": "We need this for Jami, and I think other developers will probably find it useful too if they try to integrate pipewiregrab into their application. Being able to pass the fd as an option means that the portal logic can be handled by the application instead of inside FFmpeg if desired, which makes certain things much easier to handle (e.g. cancelling a share while the portal popup is still open). In Jami\u0027s case it also eliminates some bugs that would otherwise have been hard to get rid of and improves performance when the user cancels.",
      "parentUuid": "c5698af9_b249299c",
      "range": {
        "startLine": 242,
        "startChar": 66,
        "endLine": 242,
        "endChar": 77
      },
      "revId": "897553241c454ccc747ba005ea9575f5a92a2969",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da45823e_6ee66684",
        "filename": "contrib/src/ffmpeg/pipewiregrab-source-filter.patch",
        "patchSetId": 27
      },
      "lineNbr": 558,
      "author": {
        "id": 1059
      },
      "writtenOn": "2024-03-14T13:44:01Z",
      "side": 1,
      "message": "initialization complete with error.",
      "range": {
        "startLine": 558,
        "startChar": 5,
        "endLine": 558,
        "endChar": 73
      },
      "revId": "897553241c454ccc747ba005ea9575f5a92a2969",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a6e44c47_5833c80b",
        "filename": "contrib/src/ffmpeg/pipewiregrab-source-filter.patch",
        "patchSetId": 27
      },
      "lineNbr": 558,
      "author": {
        "id": 1035
      },
      "writtenOn": "2024-03-14T16:54:57Z",
      "side": 1,
      "message": "There may or may not be an error at this point; I modified the comment to make this clearer.",
      "parentUuid": "da45823e_6ee66684",
      "range": {
        "startLine": 558,
        "startChar": 5,
        "endLine": 558,
        "endChar": 73
      },
      "revId": "897553241c454ccc747ba005ea9575f5a92a2969",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f194b0b5_3c167e8d",
        "filename": "contrib/src/ffmpeg/pipewiregrab-source-filter.patch",
        "patchSetId": 27
      },
      "lineNbr": 678,
      "author": {
        "id": 1059
      },
      "writtenOn": "2024-03-14T13:44:01Z",
      "side": 1,
      "message": "Let\u0027s check the performance impact if any.",
      "revId": "897553241c454ccc747ba005ea9575f5a92a2969",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0aa53985_b62136a6",
        "filename": "contrib/src/ffmpeg/pipewiregrab-source-filter.patch",
        "patchSetId": 27
      },
      "lineNbr": 678,
      "author": {
        "id": 1035
      },
      "writtenOn": "2024-03-14T16:54:57Z",
      "side": 1,
      "message": "The whole frame processing logic (starting with ff_get_video_buffer and ending with av_frame_ref) was averaging 2.0 ms per frame. If you look at the most recent patchset, you\u0027ll see I modified the code to avoid creating a new AVFrame and instead directly copy the data into current_frame. That didn\u0027t change the performane though (still averaging 2.0 ms per frame). Let me know if you think that\u0027s acceptable or if you can think of a way to completely avoid doing a memcpy.",
      "parentUuid": "f194b0b5_3c167e8d",
      "revId": "897553241c454ccc747ba005ea9575f5a92a2969",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "057025db_614044f9",
        "filename": "contrib/src/ffmpeg/pipewiregrab-source-filter.patch",
        "patchSetId": 27
      },
      "lineNbr": 694,
      "author": {
        "id": 1059
      },
      "writtenOn": "2024-03-14T13:44:01Z",
      "side": 1,
      "message": "This condition was added to handle a corner case. Please check if this is required.\n    /* only put buffer in queue when stream state is streaming */\n    state \u003d pw_stream_get_state (buffer-\u003epw_stream, NULL);\n    if (state \u003d\u003d PW_STREAM_STATE_STREAMING) {\n        pw_stream_queue_buffer(buffer-\u003epw_stream, buffer-\u003epw_buf);\n   }",
      "range": {
        "startLine": 694,
        "startChar": 5,
        "endLine": 694,
        "endChar": 27
      },
      "revId": "897553241c454ccc747ba005ea9575f5a92a2969",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b4ae914c_7d0f08e5",
        "filename": "contrib/src/ffmpeg/pipewiregrab-source-filter.patch",
        "patchSetId": 27
      },
      "lineNbr": 694,
      "author": {
        "id": 1035
      },
      "writtenOn": "2024-03-14T15:24:19Z",
      "side": 1,
      "message": "I looked at the documentation and examples provided by PipeWire and I don\u0027t see anything that suggests that this check is necessary. I can try to investigate further if you tell me more about what corner case this was supposed to handle or why you thought it was needed, but otherwise I think I\u0027m going to leave it as is for now.",
      "parentUuid": "057025db_614044f9",
      "range": {
        "startLine": 694,
        "startChar": 5,
        "endLine": 694,
        "endChar": 27
      },
      "revId": "897553241c454ccc747ba005ea9575f5a92a2969",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    }
  ]
}