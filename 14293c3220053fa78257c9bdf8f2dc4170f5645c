{
  "comments": [
    {
      "key": {
        "uuid": "050c351d_f54aaa2a",
        "filename": "src/jamidht/channeled_transfers.cpp",
        "patchSetId": 9
      },
      "lineNbr": 58,
      "author": {
        "id": 5
      },
      "writtenOn": "2020-08-25T14:46:16Z",
      "side": 1,
      "message": "MAJOR SonarQube violation:\n\n\nformat specifies type \u0027unsigned int\u0027 but the argument has type \u0027size_t\u0027 (aka \u0027unsigned long\u0027)\n\n\nRead more: https://sonar-jami.savoirfairelinux.net/coding_rules#rule_key\u003dClangTidy%3Aclang-diagnostic-format",
      "revId": "14293c3220053fa78257c9bdf8f2dc4170f5645c",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2bac5612_fef4ebb9",
        "filename": "src/jamidht/channeled_transfers.cpp",
        "patchSetId": 9
      },
      "lineNbr": 69,
      "author": {
        "id": 5
      },
      "writtenOn": "2020-08-25T14:46:16Z",
      "side": 1,
      "message": "MAJOR SonarQube violation:\n\n\nformat specifies type \u0027unsigned int\u0027 but the argument has type \u0027std::vector::size_type\u0027 (aka \u0027unsigned long\u0027)\n\n\nRead more: https://sonar-jami.savoirfairelinux.net/coding_rules#rule_key\u003dClangTidy%3Aclang-diagnostic-format",
      "revId": "14293c3220053fa78257c9bdf8f2dc4170f5645c",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    }
  ]
}