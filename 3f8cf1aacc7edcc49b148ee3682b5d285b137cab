{
  "comments": [
    {
      "key": {
        "uuid": "af196800_3cf53b90",
        "filename": "src/call.h",
        "patchSetId": 31
      },
      "lineNbr": 400,
      "author": {
        "id": 6
      },
      "writtenOn": "2021-02-08T18:43:07Z",
      "side": 1,
      "message": "Should be static like before.",
      "range": {
        "startLine": 400,
        "startChar": 4,
        "endLine": 400,
        "endChar": 43
      },
      "revId": "3f8cf1aacc7edcc49b148ee3682b5d285b137cab",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54946656_ede2df0b",
        "filename": "src/call.h",
        "patchSetId": 31
      },
      "lineNbr": 400,
      "author": {
        "id": 856
      },
      "writtenOn": "2021-02-08T22:29:26Z",
      "side": 1,
      "message": "There were many issues with this variable:\nThe member was \u0027public\u0027, meaning it can be modified anywhere (this not critical though)\nThe variable only declared in SIPCall but is accessed through a template in call_factory.h:222\nconst auto\u0026 itermap \u003d callMaps_.find(T::LINK_TYPE);\nIf we need the linkType_ member to be accessible through Call base class (which is the case to keep to the abstraction), we have to move it to the Call base class. And making static in that case, does not make sense, because all the base and derived class will have the same value, which we do not want.",
      "parentUuid": "af196800_3cf53b90",
      "range": {
        "startLine": 400,
        "startChar": 4,
        "endLine": 400,
        "endChar": 43
      },
      "revId": "3f8cf1aacc7edcc49b148ee3682b5d285b137cab",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "730993ae_9d2cc9ce",
        "filename": "src/call.h",
        "patchSetId": 31
      },
      "lineNbr": 400,
      "author": {
        "id": 856
      },
      "writtenOn": "2021-02-08T22:53:35Z",
      "side": 1,
      "message": "Forget about the first issue, it\u0027s const, my bad.",
      "parentUuid": "54946656_ede2df0b",
      "range": {
        "startLine": 400,
        "startChar": 4,
        "endLine": 400,
        "endChar": 43
      },
      "revId": "3f8cf1aacc7edcc49b148ee3682b5d285b137cab",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a9a176d_0860f372",
        "filename": "src/call.h",
        "patchSetId": 31
      },
      "lineNbr": 400,
      "author": {
        "id": 6
      },
      "writtenOn": "2021-02-08T23:27:22Z",
      "side": 1,
      "message": "Indeed, my comment was wrong: it should not be static but accessible through an overridden method (so no linkType_ field at all, just a method).\nPrevious implementation actually leveraged the inheritance system by accessing this variable through an overridden virtual method, which is cleaner.",
      "parentUuid": "730993ae_9d2cc9ce",
      "range": {
        "startLine": 400,
        "startChar": 4,
        "endLine": 400,
        "endChar": 43
      },
      "revId": "3f8cf1aacc7edcc49b148ee3682b5d285b137cab",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b27d34c1_324a0173",
        "filename": "src/call.h",
        "patchSetId": 31
      },
      "lineNbr": 400,
      "author": {
        "id": 856
      },
      "writtenOn": "2021-02-09T00:02:47Z",
      "side": 1,
      "message": "Agree, only virtual would do, no need for data member.",
      "parentUuid": "8a9a176d_0860f372",
      "range": {
        "startLine": 400,
        "startChar": 4,
        "endLine": 400,
        "endChar": 43
      },
      "revId": "3f8cf1aacc7edcc49b148ee3682b5d285b137cab",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb6ab3b5_6ab763ff",
        "filename": "src/plugin/conversationservicesmanager.h",
        "patchSetId": 31
      },
      "lineNbr": 8,
      "author": {
        "id": 6
      },
      "writtenOn": "2021-02-08T18:26:31Z",
      "side": 1,
      "message": "rebase issue ?",
      "range": {
        "startLine": 2,
        "startChar": 8,
        "endLine": 8,
        "endChar": 2
      },
      "revId": "3f8cf1aacc7edcc49b148ee3682b5d285b137cab",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d7926c2_6a8080a2",
        "filename": "src/plugin/conversationservicesmanager.h",
        "patchSetId": 31
      },
      "lineNbr": 8,
      "author": {
        "id": 856
      },
      "writtenOn": "2021-02-08T22:40:38Z",
      "side": 1,
      "message": "Seems so.\nDone",
      "parentUuid": "eb6ab3b5_6ab763ff",
      "range": {
        "startLine": 2,
        "startChar": 8,
        "endLine": 8,
        "endChar": 2
      },
      "revId": "3f8cf1aacc7edcc49b148ee3682b5d285b137cab",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    }
  ]
}