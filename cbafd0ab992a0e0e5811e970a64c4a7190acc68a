{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "17e0839a_911721f5",
        "filename": "src/conference.cpp",
        "patchSetId": 1
      },
      "lineNbr": 909,
      "author": {
        "id": 856
      },
      "writtenOn": "2021-11-12T16:35:19Z",
      "side": 1,
      "message": "The confOrder was designed to handle moderator actions.\nIMHO to have a clean design, we should have a distinction between actions can be done only by moderators, and actions that can be done by everyone.\nthe onConfOrder (the name can be changed though) will be called only if the action is only a moderator\u0027s action and the requester is a moderator.\nAnd the other actions will be done another method (e.g. onParticipantRequest ()).\nI dont think this will be overly complicated, and will be less prone to error with future feature requests.",
      "revId": "cbafd0ab992a0e0e5811e970a64c4a7190acc68a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4eaa7be_8cbc9421",
        "filename": "src/conference.cpp",
        "patchSetId": 1
      },
      "lineNbr": 909,
      "author": {
        "id": 220
      },
      "writtenOn": "2021-11-12T17:07:12Z",
      "side": 1,
      "message": "confOrder is designed to send order to a conference. I don\u0027t mind if, depending of the level you have you can send some orders like here. And https://git.jami.net/savoirfairelinux/jami-project/-/wikis/technical/6.1.-Conference-Protocol should be updated. Also a test.\n\nTo be more clear, maybe it can be splitted in two functions:\n\nhandleParticipantOrders\nhandleModeratorsOrders",
      "parentUuid": "17e0839a_911721f5",
      "revId": "cbafd0ab992a0e0e5811e970a64c4a7190acc68a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e466dcd0_7f3f7ffa",
        "filename": "src/conference.cpp",
        "patchSetId": 1
      },
      "lineNbr": 911,
      "author": {
        "id": 220
      },
      "writtenOn": "2021-11-12T17:07:12Z",
      "side": 1,
      "message": "If we keep it here, we must return there, because the warning must not be shown as the order is handled before.",
      "range": {
        "startLine": 910,
        "startChar": 13,
        "endLine": 911,
        "endChar": 9
      },
      "revId": "cbafd0ab992a0e0e5811e970a64c4a7190acc68a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bcd66cae_cc3b9fa3",
        "filename": "src/conference.cpp",
        "patchSetId": 1
      },
      "lineNbr": 911,
      "author": {
        "id": 220
      },
      "writtenOn": "2021-11-12T20:57:28Z",
      "side": 1,
      "message": "In fact, the protocol should be able to contains more than one order to be able to send less data if multiple orders is sent.\n\nSo the code should be\n\n```cpp\nhandleParticipantsOrders(json)\nif (isModerator(peer))\n   handleModeratorsOrders(json)\n```\n\nand we can remove the warning",
      "parentUuid": "e466dcd0_7f3f7ffa",
      "range": {
        "startLine": 910,
        "startChar": 13,
        "endLine": 911,
        "endChar": 9
      },
      "revId": "cbafd0ab992a0e0e5811e970a64c4a7190acc68a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f382489b_ea510090",
        "filename": "src/conference.cpp",
        "patchSetId": 1
      },
      "lineNbr": 911,
      "author": {
        "id": 856
      },
      "writtenOn": "2021-11-15T14:19:29Z",
      "side": 1,
      "message": "As is, the protocol does not handle (at least in the current implementation) multiple actions in one conf order. If we put \"mute Participant 1\" followed by \"un-mute participant 2\" both will be muted since the mute state is not matched with the participant and not removed from the root when read.",
      "parentUuid": "bcd66cae_cc3b9fa3",
      "range": {
        "startLine": 910,
        "startChar": 13,
        "endLine": 911,
        "endChar": 9
      },
      "revId": "cbafd0ab992a0e0e5811e970a64c4a7190acc68a",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    }
  ]
}