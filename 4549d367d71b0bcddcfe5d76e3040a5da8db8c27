{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1bcf11d1_39a46277",
        "filename": "src/sip/sipcall.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2245,
      "author": {
        "id": 220
      },
      "writtenOn": "2022-02-22T21:22:17Z",
      "side": 1,
      "message": "Restarting. We agree that the original problem is:\n+ If we mute the audio, trigger a renegotiation (eg cut the video) and uncut the audio, the audio is not going back?\n\nMy question is where is the bug located? Is it in Sdp::getMediaAttributeListFromSdp, which will only be used during renegotiation (so in sdp.cpp, line 1030, mediaAttr.muted_ will be considered as MUTED?\n\nImho, the Sdp::mediaDirection you wrote on current master is what we want. I didn\u0027t like the first patchset, because it was considering audio medias differently in the SDP, which looks like a workaround\n\nIf we want to ignore and always enable audio, it should, I think, be done where we check this media direction (eg if it\u0027s in SIPCall::configureRtpSession we can check \"if (mediaAttr-\u003emuted_) {\"-\u003e\"if (mediaAttr-\u003emuted_ \u0026\u0026 mediaAttr-\u003etype !\u003d MediaType::MEDIA_AUDIO) {\"\n\nAs the SDP is correct (at least for me), but we want to ignore this in our implementation, as you said it\u0027s only related to our app logic",
      "range": {
        "startLine": 2243,
        "startChar": 34,
        "endLine": 2245,
        "endChar": 5
      },
      "revId": "4549d367d71b0bcddcfe5d76e3040a5da8db8c27",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d43d5206_882fcb3b",
        "filename": "src/sip/sipcall.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2245,
      "author": {
        "id": 856
      },
      "writtenOn": "2022-02-22T22:33:22Z",
      "side": 1,
      "message": "Please read my first answer.\nOnce again, you need to know that mute state and media direction are not the same.\nSIP/SDP RFC does not define the mute, it only defines the media direction.\nSo you can mute the local media either by setting the media direction to recvonly/inactive, or by muting the local capture (the RTP packet will contain silence).\nFor the video, the first method is used, for audio the second is used. I do not know why. I asked many times, I haven\u0027t got an answer. But this is fine for me as long as we are consistent.\n\nNow, I am using the media direction in the SDP to know if the peer is sending the media (video in particular) to know if I need to start the receiver/renderer or not.\n\nI don\u0027t know what are you suggesting, but please be aware that from SDP/SIP perspective, the media configuration must comply to the negotiated SDP.\nFor instance, if the media direction for the audio is set sendrecv, we must send RTP packets with the negotiated codec, and be prepared to receive RTP packet as well.\n\nNow, since it was decided that the audio mute is done by muting the local capture, we need to pass that information. If do not like the callback, suggest anything you want, but again do not confuse the mute with the media direction.",
      "parentUuid": "1bcf11d1_39a46277",
      "range": {
        "startLine": 2243,
        "startChar": 34,
        "endLine": 2245,
        "endChar": 5
      },
      "revId": "4549d367d71b0bcddcfe5d76e3040a5da8db8c27",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6dbc285f_12533a46",
        "filename": "src/sip/sipcall.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2245,
      "author": {
        "id": 220
      },
      "writtenOn": "2022-02-23T20:41:00Z",
      "side": 1,
      "message": "I already read the different answers.\n\n\u003e Once again, you need to know that mute state and media direction are not the same.\n\nThat\u0027s the whole points of my comments. There is no reason to touch sdp.cpp in any patchset for a mute problem (GitLab: #688)\n\n\u003e For the video, the first method is used, for audio the second is used. I do not know why. I asked many times, I haven\u0027t got an answer.\n\nI don\u0027t have any answer. I don\u0027t know neither and I didn\u0027t decide this.\nBut the silence seems to avoid any glitch and avoid any renegotiation that was necessary before your patch\nAnd this is my comment since patchset 1, why Sdp::mediaDirection should contains a different path for audio.\n\n\u003e I don\u0027t know what are you suggesting,\n\nI want to fully understand where is the problem located. That\u0027s the whole point of \"My question is where is the bug located?\"\nBut, as you pointed several time \"that mute state and media direction are not the same.\" For me, what I suggest is that upper (not sdp.cpp) classes should never pass muted_ \u003d true for choosing a media direction for audio, as you said, it\u0027s 2 different things. As anyway you want \"sendrecv\" for audio",
      "parentUuid": "d43d5206_882fcb3b",
      "range": {
        "startLine": 2243,
        "startChar": 34,
        "endLine": 2245,
        "endChar": 5
      },
      "revId": "4549d367d71b0bcddcfe5d76e3040a5da8db8c27",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb7b5509_8dd8bc04",
        "filename": "src/sip/sipcall.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2245,
      "author": {
        "id": 856
      },
      "writtenOn": "2022-02-23T21:59:28Z",
      "side": 1,
      "message": "\"And this is my comment since patchset 1, why Sdp::mediaDirection should contains a different path for audio\"\nBecause we want to control the media direction regardless of the mute state\n\n\"what I suggest is that upper (not sdp.cpp) classes should never pass muted_ \u003d true for choosing a media direction for audio ...\"\n\nYou want to have two mute states: one for SDP and one for the rest. So, for the same instance (audio in this case) the same attribute (mute) will have different values depending in which place is used. This is a very bad idea and a very bad design. Furthermore, you are still trying to couple the mute with the media direction.\n\n\"That\u0027s the whole point of \"My question is where is the bug located?\"\n\nI think the problem is you did not understand the rework of the re-invite I did in the previous, and possibly the problem with the previous re-invite, otherwise the current issue will be trivial to understand.I will try to summarize.\n\nPrior to my patch, when a re-invite is performed, the media transport (ICE, ...) and the RTP streams (sockets, media sender/receiver, codecs, ...) are destroyed and new sessions are negotiated. So when the SDP is created, it was created as if it was a new call, so the audio was not muted. It will be muted locally later if it was already muted.\nWith my patch, the RTP streams and transport are not destroyed. If the video is muted, it will recreate a new SDP using the updated state (video muted and audio unchanged). But here, if the audio was muted, then SDP will put a\u003drecvonly.\nSo we need to tell the SDP that even if the media is muted, we need to set direction to a\u003dsendrecv.\nIMHO, the callback is a very clean option, although I am open to any other alternative. However, overriding the mute state is a very bad solution.",
      "parentUuid": "6dbc285f_12533a46",
      "range": {
        "startLine": 2243,
        "startChar": 34,
        "endLine": 2245,
        "endChar": 5
      },
      "revId": "4549d367d71b0bcddcfe5d76e3040a5da8db8c27",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbed89e4_eb723d30",
        "filename": "src/sip/sipcall.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2258,
      "author": {
        "id": 220
      },
      "writtenOn": "2022-02-22T21:22:17Z",
      "side": 1,
      "message": "I don\u0027t get this change neither, sdp was unrelated to SIPCall and the architecture was better without weird lambda which doesn\u0027t depends on call.",
      "range": {
        "startLine": 2236,
        "startChar": 20,
        "endLine": 2258,
        "endChar": 14
      },
      "revId": "4549d367d71b0bcddcfe5d76e3040a5da8db8c27",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "200197e4_479cdc2c",
        "filename": "src/sip/sipcall.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2260,
      "author": {
        "id": 6
      },
      "writtenOn": "2022-02-19T16:00:13Z",
      "side": 1,
      "message": "This seems unneeded, as it doesn\u0027t use any call property, only mediaAttr that is passed as an argument.\n\nIt seems like the sdp is the standard way to negotiate\u0026communicate the mute/hold state in a SIP call, not only for Jami-to-Jami but also when communicating with other SIP agents. If we can reinvite without restarting the media, why not using the standard ?",
      "range": {
        "startLine": 2232,
        "startChar": 0,
        "endLine": 2260,
        "endChar": 0
      },
      "revId": "4549d367d71b0bcddcfe5d76e3040a5da8db8c27",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dad4c1bc_10c03f68",
        "filename": "src/sip/sipcall.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2260,
      "author": {
        "id": 856
      },
      "writtenOn": "2022-02-20T20:18:14Z",
      "side": 1,
      "message": "when you mention \u0027standard\u0027, please put some references that we can refer to. SIP is made of dozens of RFCs, so I can\u0027t guess which one you are referring to.\nBut I can answer the question partially. The SDP is still responsible for media direction. This method only implements the app logic. \nIt was decided that only the mute video requires a re-invite. Although I do not necessarily find it problematic, by I did not find any justification for that. May be you can enlighten me. I did not change it because I do not see the need to. In addition, changing it should be done through an explicit requirement.\nThis method implements the app logic and avoid hard-coding the app logic in the SDP.",
      "parentUuid": "200197e4_479cdc2c",
      "range": {
        "startLine": 2232,
        "startChar": 0,
        "endLine": 2260,
        "endChar": 0
      },
      "revId": "4549d367d71b0bcddcfe5d76e3040a5da8db8c27",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "401ec37d_74419c6e",
        "filename": "src/sip/sipcall.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2260,
      "author": {
        "id": 856
      },
      "writtenOn": "2022-02-21T16:28:53Z",
      "side": 1,
      "message": "Furthermore, SIP/SDP does not really define the notion of \u0027mute\u0027. Check SDP RFC-8866 (or even in the older RFC-4566). It only defines the media directions which only determines if the flow of RTP streams.",
      "parentUuid": "dad4c1bc_10c03f68",
      "range": {
        "startLine": 2232,
        "startChar": 0,
        "endLine": 2260,
        "endChar": 0
      },
      "revId": "4549d367d71b0bcddcfe5d76e3040a5da8db8c27",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ccacdbe3_4c2481d5",
        "filename": "test/unitTest/sip_account/sip_basic_calls.cpp",
        "patchSetId": 5
      },
      "lineNbr": 775,
      "author": {
        "id": 220
      },
      "writtenOn": "2022-02-22T21:22:17Z",
      "side": 1,
      "message": "empty",
      "range": {
        "startLine": 774,
        "startChar": 23,
        "endLine": 775,
        "endChar": 17
      },
      "revId": "4549d367d71b0bcddcfe5d76e3040a5da8db8c27",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "50fe6658_a6d3a675",
        "filename": "test/unitTest/sip_account/sip_basic_calls.cpp",
        "patchSetId": 5
      },
      "lineNbr": 775,
      "author": {
        "id": 856
      },
      "writtenOn": "2022-02-22T22:33:22Z",
      "side": 1,
      "message": "indeed. fixed",
      "parentUuid": "ccacdbe3_4c2481d5",
      "range": {
        "startLine": 774,
        "startChar": 23,
        "endLine": 775,
        "endChar": 17
      },
      "revId": "4549d367d71b0bcddcfe5d76e3040a5da8db8c27",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    }
  ]
}