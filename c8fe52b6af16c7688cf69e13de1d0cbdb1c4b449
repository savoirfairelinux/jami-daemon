{
  "comments": [
    {
      "key": {
        "uuid": "2ad5f57d_d423cd0e",
        "filename": "bin/dbus/cx.ring.Ring.CallManager.xml",
        "patchSetId": 41
      },
      "lineNbr": 71,
      "author": {
        "id": 220
      },
      "writtenOn": "2021-03-03T14:24:25Z",
      "side": 1,
      "message": "Imho client should never pass the value for iaMap.emplace(\"SECURE\",ediaAttr.security_ \u003d\u003d KeyExchangeProtocol::SDES)\n\nThe daemon must be the only one to take care of this complexity",
      "range": {
        "startLine": 66,
        "startChar": 18,
        "endLine": 71,
        "endChar": 29
      },
      "revId": "c8fe52b6af16c7688cf69e13de1d0cbdb1c4b449",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "acd1cb31_81d03e0e",
        "filename": "bin/dbus/cx.ring.Ring.CallManager.xml",
        "patchSetId": 41
      },
      "lineNbr": 74,
      "author": {
        "id": 220
      },
      "writtenOn": "2021-03-03T14:24:25Z",
      "side": 1,
      "message": "placeCallWithDetails can be deprecated if we use this, as the only detail passed is \"AUDIO_ONLY\", \"true\"",
      "range": {
        "startLine": 52,
        "startChar": 27,
        "endLine": 74,
        "endChar": 17
      },
      "revId": "c8fe52b6af16c7688cf69e13de1d0cbdb1c4b449",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7dc757c5_1a3067b0",
        "filename": "src/call_factory.cpp",
        "patchSetId": 41
      },
      "lineNbr": 82,
      "author": {
        "id": 220
      },
      "writtenOn": "2021-03-03T14:24:25Z",
      "side": 1,
      "message": "we generally avoid assert() in src/ part as it\u0027s not executed. if/throw must be used (btw here we should return nullptr",
      "range": {
        "startLine": 82,
        "startChar": 7,
        "endLine": 82,
        "endChar": 22
      },
      "revId": "c8fe52b6af16c7688cf69e13de1d0cbdb1c4b449",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aeed99d3_f7f378f9",
        "filename": "src/sip/sipcall.cpp",
        "patchSetId": 41
      },
      "lineNbr": 151,
      "author": {
        "id": 220
      },
      "writtenOn": "2021-03-03T14:24:25Z",
      "side": 1,
      "message": "std::find_if",
      "range": {
        "startLine": 146,
        "startChar": 6,
        "endLine": 151,
        "endChar": 5
      },
      "revId": "c8fe52b6af16c7688cf69e13de1d0cbdb1c4b449",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60471a9e_62de08da",
        "filename": "src/sip/sipcall.cpp",
        "patchSetId": 41
      },
      "lineNbr": 174,
      "author": {
        "id": 220
      },
      "writtenOn": "2021-03-03T14:24:25Z",
      "side": 1,
      "message": "same",
      "range": {
        "startLine": 168,
        "startChar": 6,
        "endLine": 174,
        "endChar": 16
      },
      "revId": "c8fe52b6af16c7688cf69e13de1d0cbdb1c4b449",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a844fd4_d91bb5e0",
        "filename": "src/sip/sipcall.cpp",
        "patchSetId": 41
      },
      "lineNbr": 1336,
      "author": {
        "id": 220
      },
      "writtenOn": "2021-03-03T14:24:25Z",
      "side": 1,
      "message": "multiple access on rtpStreams_ use an iterator",
      "range": {
        "startLine": 1332,
        "startChar": 28,
        "endLine": 1336,
        "endChar": 35
      },
      "revId": "c8fe52b6af16c7688cf69e13de1d0cbdb1c4b449",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": true
    }
  ]
}