--- libupnp/threadutil/src/ThreadPool.c 2012-04-03 09:01:15.000000000 -0400
+++ libupnp/threadutil/src/ThreadPool.c 2015-05-06 12:12:36.651971882 -0400
@@ -264,7 +264,14 @@
    setpriority(PRIO_PROCESS, 0, 0);
    retVal = 0;
 #elif defined(WIN32)
-   retVal = sched_setscheduler(0, in);
+   struct sched_param current;
+   int sched_result;
+
+   memset(&current, 0, sizeof(current));
+
+   current.sched_priority = sched_get_priority_min(DEFAULT_POLICY);
+   sched_result = sched_setscheduler(0, in, &current);
+   retVal = (sched_result != -1 || errno == EPERM) ? 0 : errno;
 #elif defined(_POSIX_PRIORITY_SCHEDULING) && _POSIX_PRIORITY_SCHEDULING > 0
    struct sched_param current;
    int sched_result;
@@ -416,7 +423,7 @@

    gettimeofday(&t, NULL);
 #if defined(WIN32)
-   srand((unsigned int)t.tv_usec + (unsigned int)ithread_get_current_thread_id().p);
+   srand((unsigned int)t.tv_usec + (unsigned int)ithread_get_current_thread_id());
 #elif defined(BSD) || defined(__OSX__) || defined(__APPLE__) || defined(__FreeBSD_kernel__)
    srand((unsigned int)t.tv_usec + (unsigned int)ithread_get_current_thread_id());
 #elif defined(__linux__) || defined(__sun) || defined(__CYGWIN__) || defined(__GLIBC__)
@@ -647,7 +654,7 @@
    }
    ithread_attr_init(&attr);
    ithread_attr_setstacksize(&attr, tp->attr.stackSize);
-   ithread_attr_setdetachstate(&attr, ITHREAD_CREATE_DETACHED);
+   ithread_attr_setdetachstate(&attr, ITHREAD_CREATE_JOINABLE);
    rc = ithread_create(&temp, &attr, WorkerThread, tp);
    ithread_attr_destroy(&attr);
    if (rc == 0) {
