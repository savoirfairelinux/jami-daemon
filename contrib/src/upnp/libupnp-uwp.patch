--- /dev/null
+++ b/build/inc/upnpconfig.h
@@ -0,0 +1,136 @@
+/* upnp/inc/upnpconfig.h.  Generated from upnpconfig.h.in by configure.  */
+/* -*- C -*- */
+/*******************************************************************************
+ *
+ * Copyright (c) 2006 RÃ©mi Turboult <r3mi@users.sourceforge.net>
+ * All rights reserved. 
+ *
+ * Redistribution and use in source and binary forms, with or without 
+ * modification, are permitted provided that the following conditions are met: 
+ *
+ * * Redistributions of source code must retain the above copyright notice, 
+ * this list of conditions and the following disclaimer. 
+ * * Redistributions in binary form must reproduce the above copyright notice, 
+ * this list of conditions and the following disclaimer in the documentation 
+ * and/or other materials provided with the distribution. 
+ * * Neither name of Intel Corporation nor the names of its contributors 
+ * may be used to endorse or promote products derived from this software 
+ * without specific prior written permission.
+ * 
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
+ * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
+ * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR 
+ * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL INTEL OR 
+ * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
+ * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
+ * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR 
+ * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY 
+ * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
+ * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS 
+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ *
+ ******************************************************************************/
+
+#ifndef UPNP_CONFIG_H
+#define UPNP_CONFIG_H 
+
+
+/***************************************************************************
+ * Library version 
+ ***************************************************************************/ 
+
+/** The library version (string) e.g. "1.3.0" */
+#define UPNP_VERSION_STRING "1.6.19"
+
+/** Major version of the library */
+#define UPNP_VERSION_MAJOR 1
+
+/** Minor version of the library */
+#define UPNP_VERSION_MINOR 6
+
+/** Patch version of the library */
+#define UPNP_VERSION_PATCH 19
+
+/** The library version (numeric) e.g. 10300 means version 1.3.0 */
+#define UPNP_VERSION	\
+  ((UPNP_VERSION_MAJOR * 100 + UPNP_VERSION_MINOR) * 100 + UPNP_VERSION_PATCH)
+
+
+
+/***************************************************************************
+ * Large file support
+ ***************************************************************************/
+
+/** File Offset size */
+#define _FILE_OFFSET_BITS 64
+
+/** Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
+/* #undef _LARGEFILE_SOURCE */
+
+/** Large files support */
+#define _LARGE_FILE_SOURCE /**/
+
+/***************************************************************************
+ * Library optional features
+ ***************************************************************************/
+
+/*
+ * The following defines can be tested in order to know which 
+ * optional features have been included in the installed library.
+ */
+
+
+/** Defined to 1 if the library has been compiled with DEBUG enabled 
+ *  (i.e. configure --enable-debug) : <upnp/upnpdebug.h> file is available */
+/* #undef UPNP_HAVE_DEBUG */
+
+
+/** Defined to 1 if the library has been compiled with client API enabled 
+ *  (i.e. configure --enable-client) */
+#define UPNP_HAVE_CLIENT 1
+
+
+/** Defined to 1 if the library has been compiled with device API enabled 
+ *  (i.e. configure --enable-device) */
+#define UPNP_HAVE_DEVICE 1
+
+
+/** Defined to 1 if the library has been compiled with integrated web server
+ *  (i.e. configure --enable-webserver --enable-device) */
+#define UPNP_HAVE_WEBSERVER 1
+
+
+/** Defined to 1 if the library has been compiled with the SSDP part enabled
+ *  (i.e. configure --enable-ssdp) */
+#define UPNP_HAVE_SSDP 1
+
+
+/** Defined to 1 if the library has been compiled with optional SSDP headers
+ *  support (i.e. configure --enable-optssdp) */
+#define UPNP_HAVE_OPTSSDP 1
+
+
+/** Defined to 1 if the library has been compiled with the SOAP part enabled
+ *  (i.e. configure --enable-soap) */
+#define UPNP_HAVE_SOAP 1
+
+
+/** Defined to 1 if the library has been compiled with the GENA part enabled
+ *  (i.e. configure --enable-gena) */
+#define UPNP_HAVE_GENA 1
+
+
+/** Defined to 1 if the library has been compiled with helper API
+ *  (i.e. configure --enable-tools) : <upnp/upnptools.h> file is available */
+#define UPNP_HAVE_TOOLS 1
+
+/** Defined to 1 if the library has been compiled with ipv6 support
+ *  (i.e. configure --enable-ipv6) */
+/* #undef UPNP_ENABLE_IPV6 */
+
+/** Defined to 1 if the library has been compiled with unspecified SERVER
+ * header (i.e. configure --enable-unspecified_server) */
+/* #undef UPNP_ENABLE_UNSPECIFIED_SERVER */
+
+#endif /* UPNP_CONFIG_H */
+
--- /dev/null
+++ b/build/inc/autoconfig.h
@@ -0,0 +1,202 @@
+/* autoconfig.h.  Generated from autoconfig.h.in by configure.  */
+/* autoconfig.h.in.  Generated from configure.ac by autoheader.  */
+
+/* Define to 1 to compile debug code */
+/* #undef DEBUG */
+
+/* Define to 1 if you have the <arpa/inet.h> header file. */
+#define HAVE_ARPA_INET_H 1
+
+/* Define to 1 if you have the <dlfcn.h> header file. */
+#define HAVE_DLFCN_H 1
+
+/* Define to 1 if you don't have `vprintf' but do have `_doprnt.' */
+/* #undef HAVE_DOPRNT */
+
+/* Define to 1 if you have the <fcntl.h> header file. */
+#define HAVE_FCNTL_H 1
+
+/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */
+#define HAVE_FSEEKO 1
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+#define HAVE_INTTYPES_H 1
+
+/* Define to 1 if you have the <limits.h> header file. */
+#define HAVE_LIMITS_H 1
+
+/* Define to 1 if you have the <memory.h> header file. */
+#define HAVE_MEMORY_H 1
+
+/* Define to 1 if you have the <netdb.h> header file. */
+#define HAVE_NETDB_H 1
+
+/* Define to 1 if you have the <netinet/in.h> header file. */
+#define HAVE_NETINET_IN_H 1
+
+/* Define if you have POSIX threads libraries and header files. */
+#define HAVE_PTHREAD 1
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#define HAVE_STDINT_H 1
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#define HAVE_STDLIB_H 1
+
+/* Define to 1 if you have the <strings.h> header file. */
+#define HAVE_STRINGS_H 1
+
+/* Define to 1 if you have the <string.h> header file. */
+#define HAVE_STRING_H 1
+
+/* Defines if strndup is available on your system */
+#define HAVE_STRNDUP 1
+
+/* Defines if strnlen is available on your system */
+#define HAVE_STRNLEN 1
+
+/* Define to 1 if you have the <syslog.h> header file. */
+#define HAVE_SYSLOG_H 1
+
+/* Define to 1 if you have the <sys/ioctl.h> header file. */
+#define HAVE_SYS_IOCTL_H 1
+
+/* Define to 1 if you have the <sys/socket.h> header file. */
+#define HAVE_SYS_SOCKET_H 1
+
+/* Define to 1 if you have the <sys/stat.h> header file. */
+#define HAVE_SYS_STAT_H 1
+
+/* Define to 1 if you have the <sys/time.h> header file. */
+#define HAVE_SYS_TIME_H 1
+
+/* Define to 1 if you have the <sys/types.h> header file. */
+#define HAVE_SYS_TYPES_H 1
+
+/* Define to 1 if you have the <unistd.h> header file. */
+#define HAVE_UNISTD_H 1
+
+/* Define to 1 if you have the `vprintf' function. */
+#define HAVE_VPRINTF 1
+
+/* Define to 1 if you have the <ws2tcpip.h> header file. */
+/* #undef HAVE_WS2TCPIP_H */
+
+/* Define to the sub-directory in which libtool stores uninstalled libraries.
+   */
+#define LT_OBJDIR ".libs/"
+
+/* Define to 1 to prevent compilation of assert() */
+#define NDEBUG 1
+
+/* Define to 1 to prevent some debug code */
+#define NO_DEBUG 1
+
+/* Define to 1 if your C compiler doesn't accept -c and -o together. */
+/* #undef NO_MINUS_C_MINUS_O */
+
+/* Name of package */
+#define PACKAGE "libupnp"
+
+/* Define to the address where bug reports for this package should be sent. */
+#define PACKAGE_BUGREPORT "mroberto@users.sourceforge.net"
+
+/* Define to the full name of this package. */
+#define PACKAGE_NAME "libupnp"
+
+/* Define to the full name and version of this package. */
+#define PACKAGE_STRING "libupnp 1.6.19"
+
+/* Define to the one symbol short name of this package. */
+#define PACKAGE_TARNAME "libupnp"
+
+/* Define to the home page for this package. */
+#define PACKAGE_URL ""
+
+/* Define to the version of this package. */
+#define PACKAGE_VERSION "1.6.19"
+
+/* Define to necessary symbol if this constant uses a non-standard name on
+   your system. */
+/* #undef PTHREAD_CREATE_JOINABLE */
+
+/* Define to 1 if you have the ANSI C header files. */
+#define STDC_HEADERS 1
+
+/* see upnpconfig.h */
+#define UPNP_ENABLE_BLOCKING_TCP_CONNECTIONS 1
+
+/* see upnpconfig.h */
+/* #undef UPNP_ENABLE_IPV6 */
+
+/* see upnpconfig.h */
+#define UPNP_ENABLE_NOTIFICATION_REORDERING 1
+
+/* see upnpconfig.h */
+/* #undef UPNP_ENABLE_UNSPECIFIED_SERVER */
+
+/* see upnpconfig.h */
+#define UPNP_HAVE_CLIENT 1
+
+/* see upnpconfig.h */
+/* #undef UPNP_HAVE_DEBUG */
+
+/* see upnpconfig.h */
+#define UPNP_HAVE_DEVICE 1
+
+/* see upnpconfig.h */
+#define UPNP_HAVE_GENA 1
+
+/* see upnpconfig.h */
+#define UPNP_HAVE_OPTSSDP 1
+
+/* see upnpconfig.h */
+#define UPNP_HAVE_SOAP 1
+
+/* see upnpconfig.h */
+#define UPNP_HAVE_SSDP 1
+
+/* see upnpconfig.h */
+#define UPNP_HAVE_TOOLS 1
+
+/* see upnpconfig.h */
+#define UPNP_HAVE_WEBSERVER 1
+
+/* Do not use pthread_rwlock_t */
+#define UPNP_USE_RWLOCK 1
+
+/* see upnpconfig.h */
+#define UPNP_VERSION_MAJOR 1
+
+/* see upnpconfig.h */
+#define UPNP_VERSION_MINOR 6
+
+/* see upnpconfig.h */
+#define UPNP_VERSION_PATCH 19
+
+/* see upnpconfig.h */
+#define UPNP_VERSION_STRING "1.6.19"
+
+/* Version number of package */
+#define VERSION "1.6.19"
+
+/* File Offset size */
+#define _FILE_OFFSET_BITS 64
+
+/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */
+#define _LARGEFILE_SOURCE 1
+
+/* Large files support */
+#define _LARGE_FILE_SOURCE /**/
+
+/* Define to empty if `const' does not conform to ANSI C. */
+/* #undef const */
+
+/* Define to `long int' if <sys/types.h> does not define. */
+/* #undef off_t */
+
+/* Define to `unsigned int' if <sys/types.h> does not define. */
+/* #undef size_t */
+
+/* Type for storing the length of struct sockaddr */
+/* #undef socklen_t */
--- a/threadutil/inc/ThreadPool.h
+++ b/threadutil/inc/ThreadPool.h
@@ -46,6 +46,7 @@
 #include <errno.h>
 
 #ifdef WIN32
+#ifndef _TIMEZONE_DEFINED
 	#include <time.h>
 	struct timezone
 	{
@@ -53,6 +54,7 @@
 		int  tz_dsttime;     /* type of dst correction */
 	};
 	int gettimeofday(struct timeval *tv, struct timezone *tz);
+#endif
 #else /* WIN32 */
 	#include <sys/param.h>
 	#include <sys/time.h> /* for gettimeofday() */
--- a/upnp/src/api/upnpapi.c
+++ b/upnp/src/api/upnpapi.c
@@ -357,8 +357,8 @@ static int UpnpInitPreamble(void)
 
 #ifdef UPNP_HAVE_OPTSSDP
 	/* Create the NLS uuid. */
-	uuid_create(&nls_uuid);
-	uuid_unpack(&nls_uuid, gUpnpSdkNLSuuid);
+    uuid_upnp_create(&nls_uuid);
+    uuid_upnp_unpack(&nls_uuid, gUpnpSdkNLSuuid);
 #endif /* UPNP_HAVE_OPTSSDP */
 
 	/* Initializes the handle list. */
@@ -374,13 +374,13 @@ static int UpnpInitPreamble(void)
 		return retVal;
 	}
 
+#ifdef INTERNAL_WEB_SERVER
 #ifdef INCLUDE_DEVICE_APIS
 #if EXCLUDE_SOAP == 0
 	SetSoapCallback(soap_device_callback);
 #endif
 #endif /* INCLUDE_DEVICE_APIS */
 
-#ifdef INTERNAL_WEB_SERVER
 #if EXCLUDE_GENA == 0
 	SetGenaCallback(genaCallback);
 #endif
--- a/upnp/src/api/upnptools.c
+++ b/upnp/src/api/upnptools.c
@@ -57,7 +57,9 @@
 #define HEADER_LENGTH 2000
 
 #ifdef WIN32
-	#define snprintf _snprintf
+    #if _MSC_VER < 1900
+        #define snprintf _snprintf
+    #endif
 #endif
 
 /*!
--- a/upnp/src/gena/gena_ctrlpt.c
+++ b/upnp/src/gena/gena_ctrlpt.c
@@ -53,7 +53,9 @@
 #include "upnpapi.h"
 
 #ifdef WIN32
-	#define snprintf _snprintf
+    #if _MSC_VER < 1900
+        #define snprintf _snprintf
+    #endif
 #endif
 
 extern ithread_mutex_t GlobalClientSubscribeMutex;
@@ -561,8 +563,8 @@ int genaSubscribe(
 	}
 
 	/* generate client SID */
-	uuid_create(&uid );
-	uuid_unpack(&uid, temp_sid);
+    uuid_upnp_create(&uid );
+    uuid_upnp_unpack(&uid, temp_sid);
 	rc = snprintf(temp_sid2, sizeof(temp_sid2), "uuid:%s", temp_sid);
 	if (rc < 0 || (unsigned int) rc >= sizeof(temp_sid2)) {
 		return_code = UPNP_E_OUTOF_MEMORY;
--- a/upnp/src/gena/gena_device.c
+++ b/upnp/src/gena/gena_device.c
@@ -53,7 +53,9 @@
 #include "uuid.h"
 
 #ifdef WIN32
-	#define snprintf _snprintf
+    #if _MSC_VER < 1900
+        #define snprintf _snprintf
+    #endif
 #endif
 
 #define STALE_JOBID (INVALID_JOB_ID -1)
@@ -1271,8 +1273,8 @@ void gena_process_subscription_request(
 	}
 
 	/* generate SID */
-	uuid_create(&uid);
-	uuid_unpack(&uid, temp_sid);
+    uuid_upnp_create(&uid);
+    uuid_upnp_unpack(&uid, temp_sid);
 	rc = snprintf(sub->sid, sizeof(sub->sid), "uuid:%s", temp_sid);
 
 	/* respond OK */
--- a/upnp/src/genlib/miniserver/miniserver.c
+++ b/upnp/src/genlib/miniserver/miniserver.c
@@ -68,6 +68,13 @@
 /*! . */
 #define APPLICATION_LISTENING_PORT 49152
 
+/* IPV6_V6ONLY is missing from MinGW, hack taken from
+ * http://svn.apache.org/repos/asf/apr/apr/trunk/network_io/win32/sockopt.c
+ */
+#ifndef IPV6_V6ONLY
+#define IPV6_V6ONLY 27
+#endif
+
 struct mserv_request_t {
 	/*! Connection handle. */
 	SOCKET connfd;
--- a/upnp/src/genlib/net/http/httpreadwrite.c
+++ b/upnp/src/genlib/net/http/httpreadwrite.c
@@ -59,7 +59,9 @@
 #ifdef WIN32
 	#include <malloc.h>
 	#define fseeko fseek
-	#define snprintf _snprintf
+    #if _MSC_VER < 1900
+        #define snprintf _snprintf
+    #endif
 #else
 	#include <arpa/inet.h>
 	#include <sys/types.h>
@@ -2165,6 +2167,7 @@ void get_sdk_info(OUT char *info, IN size_t infoSize)
 	OSVERSIONINFO versioninfo;
 	versioninfo.dwOSVersionInfoSize = sizeof(OSVERSIONINFO);
 
+#if (WINAPI_FAMILY_APP != WINAPI_FAMILY_PC_APP)
 	if (GetVersionEx(&versioninfo) != 0)
 		snprintf(info, infoSize,
 			"%d.%d.%d %d/%s, UPnP/1.0, Portable SDK for UPnP devices/"
@@ -2174,6 +2177,10 @@ void get_sdk_info(OUT char *info, IN size_t infoSize)
 	else
 		*info = '\0';
 #else
+        snprintf(info, infoSize, "%d.%d.%d %d/%s, UPnP/1.0, Portable SDK for UPnP devices/" PACKAGE_VERSION "\r\n",
+            0, 0, 0, 0, 0);
+    #endif
+    #else
 	int ret_code;
 	struct utsname sys_info;
 
--- a/upnp/src/genlib/net/http/webserver.c
+++ b/upnp/src/genlib/net/http/webserver.c
@@ -63,7 +63,9 @@
 #include <sys/stat.h>
 
 #ifdef WIN32
-	 #define snprintf _snprintf
+    #if _MSC_VER < 1900
+        #define snprintf _snprintf
+    #endif
 #endif
 
 /*!
--- a/upnp/src/genlib/net/uri/uri.c
+++ b/upnp/src/genlib/net/uri/uri.c
@@ -45,7 +45,9 @@
 	#endif
 #endif
 #ifdef WIN32
-	#define snprintf _snprintf
+    #if _MSC_VER < 1900
+        #define snprintf _snprintf
+    #endif
 #endif
 #include <assert.h>
 
--- a/upnp/src/inc/upnputil.h
+++ b/upnp/src/inc/upnputil.h
@@ -130,7 +130,7 @@ void linecopylen(
 		#define strncasecmp		strnicmp
 		#define sleep(a)		Sleep((a)*1000)
 		#define usleep(a)		Sleep((a)/1000)
-		#define strerror_r(a,b,c)	(strerror_s((b),(c),(a)))
+        #define strerror_r(a,b,c) strncpy( b, strerror(a), c)
 	#else
 		#define max(a, b)   (((a)>(b))? (a):(b))
 		#define min(a, b)   (((a)<(b))? (a):(b))
--- a/upnp/src/inc/uuid.h
+++ b/upnp/src/inc/uuid.h
@@ -41,14 +41,14 @@ typedef struct _uuid_upnp {
 /*!
  * \brief Generate a UUID.
  */
-int uuid_create(
+int uuid_upnp_create(
 	/*! . */
 	uuid_upnp * id);
 
 /*!
  * \brief Out will be xxxx-xx-xx-xx-xxxxxx format.
  */
-void uuid_unpack(
+void uuid_upnp_unpack(
 	/*! . */
 	uuid_upnp * u,
 	/*! . */
@@ -57,7 +57,7 @@ void uuid_unpack(
 /*!
  * \brief Create a UUID using a "name" from a "name space"
  */
-void uuid_create_from_name(
+void uuid_upnp_create_from_name(
 	/*! Resulting UUID. */
 	uuid_upnp * uid,
 	/*! UUID to serve as context, so identical names from different name
@@ -78,7 +78,7 @@ void uuid_create_from_name(
  *
  * \note Lexical ordering is not temporal ordering!
  */
-int uuid_compare(
+int uuid_upnp_compare(
 	/*! . */
 	uuid_upnp * u1,
 	/*! . */
--- a/upnp/src/soap/soap_device.c
+++ b/upnp/src/soap/soap_device.c
@@ -52,7 +52,9 @@
 #include <string.h>
 
 #ifdef WIN32
-	#define snprintf _snprintf
+    #if _MSC_VER < 1900
+        #define snprintf _snprintf
+    #endif
 #endif
 
 /*! timeout duration in secs for transmission/reception */
--- a/upnp/src/ssdp/ssdp_ctrlpt.c
+++ b/upnp/src/ssdp/ssdp_ctrlpt.c
@@ -59,7 +59,9 @@
 
 #ifdef WIN32
 #include <string.h>
-#define snprintf _snprintf
+    #if _MSC_VER < 1900
+        #define snprintf _snprintf
+    #endif
 #endif /* WIN32 */
 
 /*!
--- a/upnp/src/ssdp/ssdp_device.c
+++ b/upnp/src/ssdp/ssdp_device.c
@@ -57,7 +57,9 @@
 #include <string.h>
 
 #ifdef WIN32
-	#define snprintf _snprintf
+    #if _MSC_VER < 1900
+        #define snprintf _snprintf
+    #endif
 #endif
 
 #define MSGTYPE_SHUTDOWN	0
--- a/upnp/src/ssdp/ssdp_server.c
+++ b/upnp/src/ssdp/ssdp_server.c
@@ -41,7 +41,9 @@
 #ifndef WIN32
 	#include <sys/param.h>
 #else
-	#define snprintf _snprintf
+    #if _MSC_VER < 1900
+        #define snprintf _snprintf
+    #endif
 #endif /* WIN32 */
 
 #include "config.h"
@@ -69,6 +71,13 @@
 	#endif /* UPNP_ENABLE_IPV6 */
 #endif /* INCLUDE_CLIENT_APIS */
 
+/* IPV6_V6ONLY is missing from MinGW, hack taken from
+ * http://svn.apache.org/repos/asf/apr/apr/trunk/network_io/win32/sockopt.c
+ */
+#ifndef IPV6_V6ONLY
+#define IPV6_V6ONLY 27
+#endif
+
 void RequestHandler();
 
 enum Listener {
--- a/upnp/src/urlconfig/urlconfig.c
+++ b/upnp/src/urlconfig/urlconfig.c
@@ -50,7 +50,9 @@
 #include <stdio.h>
 
 #ifdef WIN32
-	#define snprintf _snprintf
+    #if _MSC_VER < 1900
+        #define snprintf _snprintf
+    #endif
 #else
 	#include <sys/types.h>
 #endif
--- a/upnp/src/uuid/sysdep.c
+++ b/upnp/src/uuid/sysdep.c
@@ -30,6 +30,8 @@
 #include <string.h>
 #include <stdio.h>
 
+#include <Winsock2.h>
+
 /*!
  * \brief System dependent call to get IEEE node ID.
  *
@@ -93,7 +95,9 @@ void get_random_info(unsigned char seed[16])
 	/* Initialize memory area so that valgrind does not complain */
 	memset(&r, 0, sizeof r);
 	/* memory usage stats */
-	GlobalMemoryStatus( &r.m );
+#if (WINAPI_FAMILY_APP != WINAPI_FAMILY_PC_APP)
+    GlobalMemoryStatus(&r.m);
+#endif
 	/* random system stats */
 	GetSystemInfo( &r.s );
 	/* 100ns resolution (nominally) time of day */
@@ -101,9 +105,13 @@ void get_random_info(unsigned char seed[16])
 	/* high resolution performance counter */
 	QueryPerformanceCounter( &r.pc );
 	/* milliseconds since last boot */
-	r.tc = GetTickCount();
+	r.tc = GetTickCount64();
 	r.l = MAX_COMPUTERNAME_LENGTH + 1;
-	GetComputerName( r.hostname, &r.l );
+#if (WINAPI_FAMILY_APP != WINAPI_FAMILY_PC_APP)
+    GetComputerName(r.hostname, &r.l);
+#else
+    GetHostNameW(r.hostname, &r.l);
+#endif
 	/* MD5 it */
 	MD5Init(&c);
 	MD5Update(&c, (unsigned char *)(&r), sizeof r);
--- a/upnp/src/uuid/uuid.c
+++ b/upnp/src/uuid/uuid.c
@@ -50,7 +50,7 @@ static uint16_t true_random(void);
 /*!
  * \brief Generator of a UUID.
  */
-int uuid_create(uuid_upnp * uid)
+int uuid_upnp_create(uuid_upnp * uid)
 {
 	uuid_time_t timestamp;
 	uuid_time_t last_time;
@@ -82,7 +82,7 @@ int uuid_create(uuid_upnp * uid)
 	return 1;
 };
 
-void uuid_unpack(uuid_upnp * u, char *out)
+void uuid_upnp_unpack(uuid_upnp * u, char *out)
 {
 	sprintf(out,
 		"%8.8x-%4.4x-%4.4x-%2.2x%2.2x-%2.2x%2.2x%2.2x%2.2x%2.2x%2.2x",
@@ -221,7 +221,7 @@ static uint16_t true_random(void)
 /*!
  * \brief Create a UUID using a "name" from a "name space".
  */
-void uuid_create_from_name(
+void uuid_upnp_create_from_name(
 	/*! resulting UUID. */
 	uuid_upnp *uid,
 	/*! UUID to serve as context, so identical names from different name
@@ -280,7 +280,7 @@ void format_uuid_v3(uuid_upnp *uid, unsigned char hash[16])
  *
  * Note: Lexical ordering is not temporal ordering!
  */
-int uuid_compare(uuid_upnp *u1, uuid_upnp *u2)
+int uuid_upnp_compare(uuid_upnp *u1, uuid_upnp *u2)
 {
 	int i;
 
-- 
2.10.2.windows.1

