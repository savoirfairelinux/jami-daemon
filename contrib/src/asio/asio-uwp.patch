--- a/asio/include/asio/detail/impl/win_iocp_io_context.ipp
+++ b/asio/include/asio/detail/impl/win_iocp_io_context.ipp
@@ -93,7 +93,7 @@ void win_iocp_io_context::shutdown()
   {
     LARGE_INTEGER timeout;
     timeout.QuadPart = 1;
-    ::SetWaitableTimer(waitable_timer_.handle, &timeout, 1, 0, 0, FALSE);
+    //::SetWaitableTimer(waitable_timer_.handle, &timeout, 1, 0, 0, FALSE);
   }
 
   while (::InterlockedExchangeAdd(&outstanding_work_, 0) > 0)
@@ -477,11 +477,11 @@ DWORD win_iocp_io_context::get_gqcs_timeout()
   osvi.dwOSVersionInfoSize = sizeof(osvi);
   osvi.dwMajorVersion = 6ul;
 
-  const uint64_t condition_mask = ::VerSetConditionMask(
+  /*const uint64_t condition_mask = ::VerSetConditionMask(
       0, VER_MAJORVERSION, VER_GREATER_EQUAL);
 
   if (!!::VerifyVersionInfo(&osvi, VER_MAJORVERSION, condition_mask))
-    return INFINITE;
+    return INFINITE;*/
 
   return default_gqcs_timeout;
 }
@@ -492,7 +492,7 @@ void win_iocp_io_context::do_add_timer_queue(timer_queue_base& queue)
 
   timer_queues_.insert(&queue);
 
-  if (!waitable_timer_.handle)
+  /*if (!waitable_timer_.handle)
   {
     waitable_timer_.handle = ::CreateWaitableTimer(0, FALSE, 0);
     if (waitable_timer_.handle == 0)
@@ -508,7 +508,7 @@ void win_iocp_io_context::do_add_timer_queue(timer_queue_base& queue)
     timeout.QuadPart *= 10;
     ::SetWaitableTimer(waitable_timer_.handle,
         &timeout, max_timeout_msec, 0, 0, FALSE);
-  }
+  }*/
 
   if (!timer_thread_.get())
   {
@@ -537,8 +537,8 @@ void win_iocp_io_context::update_timeout()
       LARGE_INTEGER timeout;
       timeout.QuadPart = -timeout_usec;
       timeout.QuadPart *= 10;
-      ::SetWaitableTimer(waitable_timer_.handle,
-          &timeout, max_timeout_msec, 0, 0, FALSE);
+      //::SetWaitableTimer(waitable_timer_.handle,
+          //&timeout, max_timeout_msec, 0, 0, FALSE);
     }
   }
 }
--- a/asio/include/asio/detail/impl/win_thread.ipp
+++ b/asio/include/asio/detail/impl/win_thread.ipp
@@ -46,7 +46,7 @@ void win_thread::join()
   ::CloseHandle(exit_event_);
   if (terminate_threads())
   {
-    ::TerminateThread(thread_, 0);
+    //::TerminateThread(thread_, 0);
   }
   else
   {
-- 
2.8.1.windows.1

