 src/security/certstore.cpp | 28 +++++++++++++++++++++-------
 1 file changed, 21 insertions(+), 7 deletions(-)

diff --git a/src/security/certstore.cpp b/src/security/certstore.cpp
index 9b6bb96..2a3fa8a 100644
--- a/src/security/certstore.cpp
+++ b/src/security/certstore.cpp
@@ -591,14 +591,28 @@ TrustStore::PermissionStatus
 TrustStore::getCertificateStatus(const std::string& cert_id) const
 {
     std::lock_guard<std::recursive_mutex> lk(mutex_);
-    auto s = certStatus_.find(cert_id);
-    if (s == std::end(certStatus_)) {
-        auto us = unknownCertStatus_.find(cert_id);
-        if (us == std::end(unknownCertStatus_))
-            return PermissionStatus::UNDEFINED;
-        return us->second.allowed ? PermissionStatus::ALLOWED : PermissionStatus::BANNED;
+    auto cert = certStore_.getCertificate(cert_id);
+    if (!cert)
+        return PermissionStatus::UNDEFINED;
+    auto banned = false;
+    auto unknown = true;
+    while (cert) {
+        auto s = certStatus_.find(cert->getId().toString());
+        unknown &= s == std::end(certStatus_);
+        if (s != std::end(certStatus_) && !s->second.second.allowed) {
+            return PermissionStatus::BANNED;
+        } else {
+            auto us = unknownCertStatus_.find(cert->getId().toString());
+            unknown &= us == std::end(unknownCertStatus_);
+            if (!us->second.allowed)
+                return PermissionStatus::BANNED;
+        }
+        if (cert->getUID() == cert->getIssuerUID())
+            break;
+        cert = certStore_.getCertificate(cert->getIssuerUID());
     }
-    return s->second.second.allowed ? PermissionStatus::ALLOWED : PermissionStatus::BANNED;
+
+    return unknown ? PermissionStatus::UNDEFINED : PermissionStatus::ALLOWED;
 }

 std::vector<std::string>
