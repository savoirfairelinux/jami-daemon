 {a => b}/lib/nettle/Makefile.am  |  2 +-
 {a => b}/lib/nettle/Makefile.in  | 11 +++++------
 {a => b}/lib/nettle/rnd-common.c |  7 +++++--
 3 files changed, 11 insertions(+), 9 deletions(-)

diff --git a/lib/nettle/Makefile.am b/lib/nettle/Makefile.am
index e84ed1f..4767663 100644
--- a/lib/nettle/Makefile.am
+++ b/lib/nettle/Makefile.am
@@ -38,7 +38,7 @@ endif
 
 noinst_LTLIBRARIES = libcrypto.la
 
-libcrypto_la_SOURCES = pk.c mpi.c mac.c cipher.c init.c egd.c egd.h \
+libcrypto_la_SOURCES = pk.c mpi.c mac.c cipher.c init.c \
 	gnettle.h rnd-common.h rnd-common.c \
 	rnd.c
 
diff --git a/lib/nettle/Makefile.in b/lib/nettle/Makefile.in
index 88ae7cf..6ddd536 100644
--- a/lib/nettle/Makefile.in
+++ b/lib/nettle/Makefile.in
@@ -221,8 +221,8 @@ CONFIG_CLEAN_FILES =
 CONFIG_CLEAN_VPATH_FILES =
 LTLIBRARIES = $(noinst_LTLIBRARIES)
 libcrypto_la_LIBADD =
-am__libcrypto_la_SOURCES_DIST = pk.c mpi.c mac.c cipher.c init.c egd.c \
-	egd.h gnettle.h rnd-common.h rnd-common.c rnd.c rnd-fips.c \
+am__libcrypto_la_SOURCES_DIST = pk.c mpi.c mac.c cipher.c init.c \
+	gnettle.h rnd-common.h rnd-common.c rnd.c rnd-fips.c \
 	int/drbg-aes-self-test.c int/dsa-fips.h \
 	int/dsa-keygen-fips186.c int/dsa-validate.c \
 	int/provable-prime.c int/drbg-aes.c int/drbg-aes.h \
@@ -233,7 +233,7 @@ am__dirstamp = $(am__leading_dot)dirstamp
 @ENABLE_FIPS140_TRUE@	int/dsa-keygen-fips186.lo \
 @ENABLE_FIPS140_TRUE@	int/dsa-validate.lo int/provable-prime.lo \
 @ENABLE_FIPS140_TRUE@	int/drbg-aes.lo int/rsa-keygen-fips186.lo
-am_libcrypto_la_OBJECTS = pk.lo mpi.lo mac.lo cipher.lo init.lo egd.lo \
+am_libcrypto_la_OBJECTS = pk.lo mpi.lo mac.lo cipher.lo init.lo \
 	rnd-common.lo rnd.lo $(am__objects_1)
 libcrypto_la_OBJECTS = $(am_libcrypto_la_OBJECTS)
 AM_V_lt = $(am__v_lt_@AM_V@)
@@ -1279,8 +1279,8 @@ AM_CPPFLAGS = -I$(srcdir)/int -I$(srcdir)/../../gl \
 	-I$(builddir)/../includes -I$(builddir)/../../gl \
 	-I$(srcdir)/.. $(am__append_1)
 noinst_LTLIBRARIES = libcrypto.la
-libcrypto_la_SOURCES = pk.c mpi.c mac.c cipher.c init.c egd.c egd.h \
-	gnettle.h rnd-common.h rnd-common.c rnd.c $(am__append_2)
+libcrypto_la_SOURCES = pk.c mpi.c mac.c cipher.c init.c gnettle.h \
+	rnd-common.h rnd-common.c rnd.c $(am__append_2)
 all: all-am
 
 .SUFFIXES:
@@ -1355,7 +1355,6 @@ distclean-compile:
 	-rm -f *.tab.c
 
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cipher.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/egd.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/init.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mac.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mpi.Plo@am__quote@
diff --git a/lib/nettle/rnd-common.c b/lib/nettle/rnd-common.c
index c69ff3b..80b5f32 100644
--- a/lib/nettle/rnd-common.c
+++ b/lib/nettle/rnd-common.c
@@ -139,7 +139,7 @@ void _rnd_system_entropy_deinit(void)
 #include <sys/time.h>
 #include <fcntl.h>
 #include <locks.h>
-#include "egd.h"
+//#include "egd.h"
 
 static int _gnutls_urandom_fd = -1;
 static mode_t _gnutls_urandom_fd_mode = 0;
@@ -208,6 +208,7 @@ static int _rnd_get_system_entropy_urandom(void* _rnd, size_t size)
 	return 0;
 }
 
+#if 0
 static
 int _rnd_get_system_entropy_egd(void* _rnd, size_t size)
 {
@@ -232,6 +233,7 @@ int _rnd_get_system_entropy_egd(void* _rnd, size_t size)
 
 	return 0;
 }
+#endif
 
 int _rnd_system_entropy_check(void)
 {
@@ -268,6 +270,7 @@ int _rnd_system_entropy_init(void)
 
 	return 0;
 fallback:
+#if 0
 	_gnutls_urandom_fd = _rndegd_connect_socket();
 	if (_gnutls_urandom_fd < 0) {
 		_gnutls_debug_log("Cannot open egd socket!\n");
@@ -281,7 +284,7 @@ fallback:
 	}
 
 	_rnd_get_system_entropy = _rnd_get_system_entropy_egd;
-	
+#endif
 	return 0;
 }
 
