 lib/handshake.c | 28 +++++++++++++++++++++++++++-
 1 file changed, 27 insertions(+), 1 deletion(-)

diff --git a/lib/handshake.c b/lib/handshake.c
index 044b70e2a..377885abf 100644
--- a/lib/handshake.c
+++ b/lib/handshake.c
@@ -531,6 +531,7 @@ _gnutls_user_hello_func(gnutls_session_t session,
 		ret = session->internals.user_hello_func(session);

 		if (ret == GNUTLS_E_AGAIN || ret == GNUTLS_E_INTERRUPTED) {
+			printf("@@@ _gnutls_user_hello_func\n");
 			gnutls_assert();
 			sret = GNUTLS_E_INT_RET_0;
 		} else if (ret < 0) {
@@ -1307,6 +1308,9 @@ _gnutls_send_handshake2(gnutls_session_t session, mbuffer_st * bufel,
 		 * send.
 		 */
 		ret = _gnutls_handshake_io_write_flush(session);
+		if (ret == GNUTLS_E_AGAIN || ret == GNUTLS_E_INTERRUPTED) {
+			printf("@@@ _gnutls_send_handshake2 0\n");
+		}
 		return ret;

 	}
@@ -1350,6 +1354,9 @@ _gnutls_send_handshake2(gnutls_session_t session, mbuffer_st * bufel,
 						     datasize)) < 0) {
 			gnutls_assert();
 			_mbuffer_xfree(&bufel);
+			if (ret == GNUTLS_E_AGAIN || ret == GNUTLS_E_INTERRUPTED) {
+				printf("@@@ _gnutls_send_handshake2 1\n");
+			}
 			return ret;
 		}
 		/* If we are sending a PSK, generate early secrets here.
@@ -1361,6 +1368,9 @@ _gnutls_send_handshake2(gnutls_session_t session, mbuffer_st * bufel,
 			if (ret < 0) {
 				gnutls_assert();
 				_mbuffer_xfree(&bufel);
+				if (ret == GNUTLS_E_AGAIN || ret == GNUTLS_E_INTERRUPTED) {
+					printf("@@@ _gnutls_send_handshake2 2\n");
+				}
 				return ret;
 			}
 		}
@@ -1371,6 +1381,9 @@ _gnutls_send_handshake2(gnutls_session_t session, mbuffer_st * bufel,
 	if (ret < 0) {
 		gnutls_assert();
 		_mbuffer_xfree(&bufel);
+		if (ret == GNUTLS_E_AGAIN || ret == GNUTLS_E_INTERRUPTED) {
+			printf("@@@ _gnutls_send_handshake2 3\n");
+		}
 		return ret;
 	}

@@ -1380,6 +1393,9 @@ _gnutls_send_handshake2(gnutls_session_t session, mbuffer_st * bufel,
 	if (ret < 0) {
 		_mbuffer_xfree(&bufel);
 		gnutls_assert();
+		if (ret == GNUTLS_E_AGAIN || ret == GNUTLS_E_INTERRUPTED) {
+			printf("@@@ _gnutls_send_handshake2 4\n");
+		}
 		return ret;
 	}

@@ -1387,6 +1403,9 @@ _gnutls_send_handshake2(gnutls_session_t session, mbuffer_st * bufel,
 				      _mbuffer_get_udata_ptr(bufel), _mbuffer_get_udata_size(bufel));
 	if (ret < 0) {
 		gnutls_assert();
+		if (ret == GNUTLS_E_AGAIN || ret == GNUTLS_E_INTERRUPTED) {
+			printf("@@@ _gnutls_send_handshake2 5\n");
+		}
 		return ret;
 	}

@@ -1444,10 +1463,17 @@ _gnutls_send_handshake2(gnutls_session_t session, mbuffer_st * bufel,
 		}
 	}

+	if (ret == GNUTLS_E_AGAIN || ret == GNUTLS_E_INTERRUPTED) {
+		printf("@@@ _gnutls_send_handshake2 6\n");
+	}
 	return ret;

  force_send:
-	return _gnutls_handshake_io_write_flush(session);
+	ret = _gnutls_handshake_io_write_flush(session);
+	if (ret == GNUTLS_E_AGAIN || ret == GNUTLS_E_INTERRUPTED) {
+		printf("@@@ _gnutls_send_handshake2 7\n");
+	}
+	return ret;
 }

 #define CHECK_SIZE(ll) \
