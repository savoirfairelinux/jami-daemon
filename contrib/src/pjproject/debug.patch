 pjnath/src/pjnath/ice_session.c | 4 ++--
 pjnath/src/pjnath/ice_strans.c  | 3 ++-
 2 files changed, 4 insertions(+), 3 deletions(-)

diff --git a/pjnath/src/pjnath/ice_session.c b/pjnath/src/pjnath/ice_session.c
index 8b199dc6..6a56a147 100644
--- a/pjnath/src/pjnath/ice_session.c
+++ b/pjnath/src/pjnath/ice_session.c
@@ -2002,7 +2002,7 @@ static pj_status_t start_periodic_check(pj_timer_heap_t *th,
       }
     }
 
-    if (start_count == 0) {
+    /*if (start_count == 0) {
       for (i = 0; i < clist->count; ++i) {
         pj_ice_sess_check *check = &clist->checks[i];
         if (check->state == PJ_ICE_SESS_CHECK_STATE_PENDING) {
@@ -2010,7 +2010,7 @@ static pj_status_t start_periodic_check(pj_timer_heap_t *th,
           break;
         }
       }
-    }
+    }*/
 
     /* If we don't have anything in Waiting state, perform check to
      * highest priority pair that is in Frozen state.
diff --git a/pjnath/src/pjnath/ice_strans.c b/pjnath/src/pjnath/ice_strans.c
index 7583bbf8..a188aa02 100644
--- a/pjnath/src/pjnath/ice_strans.c
+++ b/pjnath/src/pjnath/ice_strans.c
@@ -1918,7 +1918,8 @@ static pj_status_t ice_close_tcp_connection(pj_ice_sess *ice,
 	pj_ice_strans *ice_st = (pj_ice_strans *)ice->user_data;
 	pj_ice_strans_comp *st_comp = ice_st->comp[lcand->comp_id - 1];
 	if (st_comp->stun[0].sock) {
-		return pj_stun_sock_close(st_comp->stun[0].sock, check_id);
+          const pj_ice_sess_cand *rcand = check->rcand;
+          return pj_stun_sock_close(st_comp->stun[0].sock, &rcand->addr);
 	}
 
 	return PJ_EINVAL;
