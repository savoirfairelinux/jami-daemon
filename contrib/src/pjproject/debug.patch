 pjlib/src/pj/activesock.c     | 12 ++++++++++++
 pjnath/src/pjnath/stun_sock.c | 14 ++++++++++++++
 2 files changed, 26 insertions(+)

diff --git a/pjlib/src/pj/activesock.c b/pjlib/src/pj/activesock.c
index 61aed1c88..27a4d4c03 100644
--- a/pjlib/src/pj/activesock.c
+++ b/pjlib/src/pj/activesock.c
@@ -684,6 +684,12 @@ PJ_DEF(pj_status_t) pj_activesock_send( pj_activesock_t *asock,
 
     send_key->activesock_data = NULL;
 
+	printf("SEND: %u - ", ((*size) - 2));
+	for (int i = 0; i < *size; ++i) {
+		printf("%u,", ((pj_uint8_t*)(data))[i]);
+	}
+	printf("\n");
+
     if (asock->whole_data) {
 	pj_ssize_t whole;
 	pj_status_t status;
@@ -735,6 +741,12 @@ PJ_DEF(pj_status_t) pj_activesock_sendto( pj_activesock_t *asock,
     if (asock->shutdown & SHUT_TX)
 	return PJ_EINVALIDOP;
 
+	printf("SEND: %u - ", ((*size) - 2));
+	for (int i = 0; i < *size; ++i) {
+		printf("%u,", ((pj_uint8_t*)(data))[i]);
+	}
+	printf("\n");
+
     return pj_ioqueue_sendto(asock->key, send_key, data, size, flags,
 			     addr, addr_len);
 }
diff --git a/pjnath/src/pjnath/stun_sock.c b/pjnath/src/pjnath/stun_sock.c
index c4519f82e..f2ddeed4a 100644
--- a/pjnath/src/pjnath/stun_sock.c
+++ b/pjnath/src/pjnath/stun_sock.c
@@ -582,7 +582,17 @@ static pj_bool_t parse_rx_packet(pj_activesock_t *asock,
 				 const pj_sockaddr_t *rx_addr,
 				 unsigned sock_addr_len)
 {
+    
 
+	printf("RECV: ");
+    pj_size_t p = 12;
+    if (size < p) {
+        p = size;
+    }
+	for (int i = 0; i < p; ++i) {
+		printf("%u,", ((pj_uint8_t*)(data))[i]);
+	}
+	printf("\n");
     pj_stun_sock *stun_sock = (pj_stun_sock*) pj_activesock_get_user_data(asock);
     if (!stun_sock)
 	return PJ_FALSE;
@@ -629,6 +639,7 @@ static pj_bool_t parse_rx_packet(pj_activesock_t *asock,
 	    pj_bool_t store_remaining = PJ_TRUE;
 	    if (buf->rx_buffer_size != 0 || buf->rx_wanted_size != 0) {
 		if (buf->rx_buffer_size == 1) {
+            printf("@@@1\n");
 		    leftover = GETVAL16H(buf->rx_buffer, current_packet);
 
 		    buf->rx_buffer_size = 0;
@@ -643,6 +654,7 @@ static pj_bool_t parse_rx_packet(pj_activesock_t *asock,
 		    }
 
 		} else if (leftover + buf->rx_buffer_size >= buf->rx_wanted_size) {
+            printf("@@@2\n");
 		    // We have enough data Build new packet to parse
 		    store_remaining = PJ_FALSE;
 		    pj_uint16_t eaten_bytes = buf->rx_wanted_size - buf->rx_buffer_size;
@@ -657,6 +669,7 @@ static pj_bool_t parse_rx_packet(pj_activesock_t *asock,
 		    buf->rx_wanted_size  = 0;
 		}
 	    } else if (leftover > 1) {
+            printf("@@@3\n");
 		leftover        = GETVAL16H(current_packet, current_packet+1);
 		current_packet += 2;
 		parsed         += 2;
@@ -668,6 +681,7 @@ static pj_bool_t parse_rx_packet(pj_activesock_t *asock,
 		}
 	    }
 	    if (store_remaining) {
+            printf("@@@4\n");
 		leftover = size - parsed;
 		pj_memcpy(buf->rx_buffer + buf->rx_buffer_size,
 			  current_packet, leftover);
