From c1093eeb18a4090fd7eac6e8e70a6da1777f0907 Mon Sep 17 00:00:00 2001
From: Olivier Dion <olivier.dion@savoirfairelinux.com>
Date: Mon, 26 Jul 2021 09:52:50 -0400
Subject: [PATCH]  pjnath/turn_sock: Fix leak of socket

Opened socket is not closed on binding and quality of service error.  The socket
is owned by the active sock only if everything went well.
---
 pjnath/src/pjnath/turn_sock.c | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/pjnath/src/pjnath/turn_sock.c b/pjnath/src/pjnath/turn_sock.c
index 8e576e031..7a88494c6 100644
--- a/pjnath/src/pjnath/turn_sock.c
+++ b/pjnath/src/pjnath/turn_sock.c
@@ -1286,6 +1286,7 @@ static void turn_on_state(pj_turn_session *sess,
 					 turn_sock->setting.port_range,
 					 max_bind_retry);
 	    if (status != PJ_SUCCESS) {
+		pj_sock_close(sock);
 		pj_turn_sock_destroy(turn_sock);
 		return;
 	    }
@@ -1296,6 +1297,7 @@ static void turn_on_state(pj_turn_session *sess,
 				    turn_sock->pool->obj_name, NULL);
 	    if (status != PJ_SUCCESS && !turn_sock->setting.qos_ignore_error) 
 	    {
+		pj_sock_close(sock);
 		pj_turn_sock_destroy(turn_sock);
 		return;
 	    }
@@ -1353,6 +1355,11 @@ static void turn_on_state(pj_turn_session *sess,
 					  turn_sock->cfg.ioqueue, &asock_cb,
 					  turn_sock,
 					  &turn_sock->active_sock);
+
+	    /* Active socket failed to take ownership of `sock` */
+	    if (status != PJ_SUCCESS) {
+		    pj_sock_close(sock);
+	    }
 	}
 #if PJ_HAS_SSL_SOCK
 	else {
-- 
2.25.1

