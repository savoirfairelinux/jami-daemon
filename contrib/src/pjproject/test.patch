 pjnath/src/pjnath/ice_session.c | 71 +++++++++++++++++++++++++++++++++++++++--------------------------------
 1 file changed, 39 insertions(+), 32 deletions(-)

diff --git a/pjnath/src/pjnath/ice_session.c b/pjnath/src/pjnath/ice_session.c
index 12b8dad06..cd55d6ef6 100644
--- a/pjnath/src/pjnath/ice_session.c
+++ b/pjnath/src/pjnath/ice_session.c
@@ -1462,6 +1462,7 @@ static void on_timer(pj_timer_heap_t *th, pj_timer_entry *te)
 
     switch (type) {
 	case TIMER_CONTROLLING_TCP_PASSIVE_TIMEOUT:
+	printf("@@@ TIMEOUT WAIT TCP PASSIVE\n");
 	LOG4((ice->obj_name, 
 	      "Controlling agent timed-out while waiting for incoming TCP checks. Set state to failed!"));
 	on_ice_complete(ice, PJNATH_EICEFAILED);
@@ -1737,6 +1738,8 @@ static pj_bool_t check_ice_complete(pj_ice_sess *ice)
 		no_pending_check = (i == ice->clist.count);
 	}
 
+	printf("@@@@@ check_ice_complete \n");
+
     if (no_pending_check) {
 	/* All checks have completed, but we don't have nominated pair.
 	 * If agent's role is controlled, check if all components have
@@ -1745,6 +1748,7 @@ static pj_bool_t check_ice_complete(pj_ice_sess *ice)
 	 * agent to send checks with USE-CANDIDATE flag set.
 	 */
 	if (ice->role == PJ_ICE_SESS_ROLE_CONTROLLED) {
+		printf("@@@@@ PJ_ICE_SESS_ROLE_CONTROLLED \n");
 	    for (i=0; i < ice->comp_cnt; ++i) {
 		if (ice->comp[i].valid_check == NULL)
 		    break;
@@ -1786,7 +1790,9 @@ static pj_bool_t check_ice_complete(pj_ice_sess *ice)
 
 	    /* Unreached */
 
-	} else if (ice->is_nominating) {
+	} else {
+		printf("@@@@@ CONTROLLING \n");
+
 #if PJ_HAS_TCP
 		if (hasTCP) {
 			// STUN server procedure https://tools.ietf.org/html/rfc6544#section-7.2
@@ -1817,46 +1823,47 @@ static pj_bool_t check_ice_complete(pj_ice_sess *ice)
 				"wait for passive connections to timeout "
 				"(timeout=%d msec)",
 				ice->opt.controlling_agent_passive_timeout));
+				return PJ_FALSE;
 			}
-			return PJ_FALSE;
-		} else {
+		}
 #endif
+
+		if (ice->is_nominating) {
+			printf("@@@@@ NOMINATING CONTROLLING \n");
 			/* We are controlling agent and all checks have completed but
 			* there's at least one component without nominated pair (or
 			* more likely we don't have any nominated pairs at all).
 			*/
 			on_ice_complete(ice, PJNATH_EICEFAILED);
-#if PJ_HAS_TCP
-		}
-#endif
-	    return PJ_TRUE;
-
-	} else {
-	    /* We are controlling agent and all checks have completed. If
-	     * we have valid list for every component, then move on to
-	     * sending nominated check, otherwise we have failed.
-	     */
-	    for (i=0; i<ice->comp_cnt; ++i) {
-		if (ice->comp[i].valid_check == NULL)
-		    break;
-	    }
+	    	return PJ_TRUE;
+		} else {
+			printf("@@@@@ NON NOMINATING CONTROLLING \n");
+			/* We are controlling agent and all checks have completed. If
+			* we have valid list for every component, then move on to
+			* sending nominated check, otherwise we have failed.
+			*/
+			for (i=0; i<ice->comp_cnt; ++i) {
+				if (ice->comp[i].valid_check == NULL)
+					break;
+			}
 
-	    if (i < ice->comp_cnt) {
-		/* At least one component doesn't have a valid check. Mark
-		 * ICE as failed.
-		 */
-		on_ice_complete(ice, PJNATH_EICEFAILED);
-		return PJ_TRUE;
-	    }
+			if (i < ice->comp_cnt) {
+				/* At least one component doesn't have a valid check. Mark
+				 * ICE as failed.
+				 */
+				on_ice_complete(ice, PJNATH_EICEFAILED);
+				return PJ_TRUE;
+			}
 
-	    /* Now it's time to send connectivity check with nomination 
-	     * flag set.
-	     */
-	    LOG4((ice->obj_name, 
-		  "All checks have completed, starting nominated checks now"));
-	    start_nominated_check(ice);
-	    return PJ_FALSE;
-	}
+			/* Now it's time to send connectivity check with nomination 
+			* flag set.
+			*/
+			LOG4((ice->obj_name, 
+			"All checks have completed, starting nominated checks now"));
+			start_nominated_check(ice);
+			return PJ_FALSE;
+		}
+    }
     }
 
     /* If this connectivity check has been successful, scan all components
