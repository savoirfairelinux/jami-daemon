 pjlib/src/pj/ip_helper_generic.c | 2 +-
 pjnath/src/pjnath/ice_session.c  | 8 ++++++--
 2 files changed, 7 insertions(+), 3 deletions(-)

diff --git a/pjlib/src/pj/ip_helper_generic.c b/pjlib/src/pj/ip_helper_generic.c
index ab441a504..2ea29087c 100644
--- a/pjlib/src/pj/ip_helper_generic.c
+++ b/pjlib/src/pj/ip_helper_generic.c
@@ -37,7 +37,7 @@
 #endif
 
 /* Set to 1 to enable tracing */
-#if 0
+#if 1
 #   include <pj/log.h>
 #   define THIS_FILE	"ip_helper_generic.c"
 #   define TRACE_(exp)	PJ_LOG(5,exp)
diff --git a/pjnath/src/pjnath/ice_session.c b/pjnath/src/pjnath/ice_session.c
index 12b8dad06..1e07c019f 100644
--- a/pjnath/src/pjnath/ice_session.c
+++ b/pjnath/src/pjnath/ice_session.c
@@ -30,13 +30,16 @@
 #include <pj/rand.h>
 #include <pj/string.h>
 
-#if defined(_WIN32) || defined(__APPLE__)
+#if defined(_WIN32)
 /* TODO(sblin): find an alternative for these paltforms */
 #else
 /* The following headers are used to get DEPRECATED addresses
  * as specified in RFC 2462 Section 5.5.4
  * https://tools.ietf.org/html/rfc2462#section-5.5.4
  */
+#if defined(__APPLE__)
+#include <net/if.h>
+#else
 #include <arpa/inet.h>
 #include <asm/types.h>
 #include <linux/netlink.h>
@@ -44,6 +47,7 @@
 #include <sys/socket.h>
 #include <unistd.h>
 #endif
+#endif
 
 /* String names for candidate types */
 static const char *cand_type_names[] =
@@ -768,7 +772,7 @@ static pj_uint32_t CALC_CAND_PRIO(pj_ice_sess *ice,
 /* retrieve invalid addresses and store it in a string */
 static PJ_DEF(void) get_invalid_addresses(char** addresses, size_t* size)
 {
-#if defined(_WIN32) || defined(__APPLE__)
+#if defined(_WIN32)
     // PJ_TODO("sblin: find alternative for WIN32 and APPLE");
 #else
     struct {
