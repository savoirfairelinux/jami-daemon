From 514f423fa1d28856a7da37e9418b6c2d3b14e4c3 Mon Sep 17 00:00:00 2001
From: jrun <darwinskernel@gmail.com>
Date: Fri, 21 Feb 2020 13:36:02 -0500
Subject: [PATCH 12/12] add compid argument to pj_ice_strans_cb.on_data_sent

---
 pjnath/include/pjnath/ice_strans.h |  4 +++-
 pjnath/src/pjnath/ice_strans.c     | 20 ++++++++++++--------
 2 files changed, 15 insertions(+), 9 deletions(-)

diff --git a/pjnath/include/pjnath/ice_strans.h b/pjnath/include/pjnath/ice_strans.h
index 41f3b6297..3755c1d2a 100644
--- a/pjnath/include/pjnath/ice_strans.h
+++ b/pjnath/include/pjnath/ice_strans.h
@@ -173,13 +173,15 @@ typedef struct pj_ice_strans_cb
      * async send operations.
      *
      * @param ice_st	    The ICE stream transport.
+     * @param comp_id	    The component ID.
      * @param sent	    If value is positive non-zero it indicates the
      *			    number of data sent. When the value is negative,
      *			    it contains the error code which can be retrieved
      *			    by negating the value (i.e. status=-sent).
      */
     void    (*on_data_sent)(pj_ice_strans *sock,
-			    pj_ssize_t sent);
+                            unsigned comp_id,
+                            pj_ssize_t sent);
 
     /**
      * Callback to report status of various ICE operations.
diff --git a/pjnath/src/pjnath/ice_strans.c b/pjnath/src/pjnath/ice_strans.c
index 8b96f49ba..e32ca466c 100644
--- a/pjnath/src/pjnath/ice_strans.c
+++ b/pjnath/src/pjnath/ice_strans.c
@@ -164,7 +164,9 @@ static void turn_on_state(pj_turn_sock *turn_sock, pj_turn_state_t old_state,
 
 
 /* Forward decls */
-static pj_bool_t on_data_sent(pj_ice_strans *ice_st, pj_ssize_t sent);
+static pj_bool_t on_data_sent(pj_ice_strans *ice_st,
+                              unsigned comp_id,
+                              pj_ssize_t sent);
 static void check_pending_send(pj_ice_strans *ice_st);
 static void ice_st_on_destroy(void *obj);
 static void destroy_ice_st(pj_ice_strans *ice_st);
@@ -1716,8 +1718,8 @@ static pj_status_t send_data(pj_ice_strans *ice_st,
     if (comp->default_cand >= comp->cand_cnt) {
 	status = PJ_EINVALIDOP;
 	if (call_cb)
-    	    on_data_sent(ice_st, -status);
-    	return status;
+	    on_data_sent(ice_st, comp_id, -status);
+	return status;
     }
 
     /* Protect with group lock, since this may cause race condition with
@@ -1828,7 +1830,7 @@ on_return:
         return status;
 
     if (call_cb) {
-        on_data_sent(ice_st, (status == PJ_SUCCESS? data_len: -status));
+        on_data_sent(ice_st, comp_id, (status == PJ_SUCCESS? data_len: -status));
     } else {
         check_pending_send(ice_st);
     }
@@ -2388,13 +2390,15 @@ static void check_pending_send(pj_ice_strans *ice_st)
 /* Notifification when asynchronous send operation via STUN/TURN
  * has completed.
  */
-static pj_bool_t on_data_sent(pj_ice_strans *ice_st, pj_ssize_t sent)
+static pj_bool_t on_data_sent(pj_ice_strans *ice_st,
+                              unsigned comp_id,
+                              pj_ssize_t sent)
 {
     if (ice_st->destroy_req || !ice_st->is_pending)
 	return PJ_TRUE;
 
     if (ice_st->call_send_cb && ice_st->cb.on_data_sent) {
-	(*ice_st->cb.on_data_sent)(ice_st, sent);
+	(*ice_st->cb.on_data_sent)(ice_st, comp_id, sent);
     }
 
     check_pending_send(ice_st);
@@ -2469,7 +2473,7 @@ static pj_bool_t stun_on_data_sent(pj_stun_sock *stun_sock,
     if (!data || !data->comp || !data->comp->ice_st)
         return PJ_TRUE;
 
-    return on_data_sent(data->comp->ice_st, sent);
+    return on_data_sent(data->comp->ice_st, 0, sent);
 }
 
 /* Notification when the status of the STUN transport has changed. */
@@ -2823,7 +2827,7 @@ static pj_bool_t turn_on_data_sent(pj_turn_sock *turn_sock,
     data = (sock_user_data *)pj_turn_sock_get_user_data(turn_sock);
     if (!data || !data->comp || !data->comp->ice_st) return PJ_TRUE;
 
-    return on_data_sent(data->comp->ice_st, sent);
+    return on_data_sent(data->comp->ice_st, 0, sent);
 }
 
 /* Callback when TURN client state has changed */
-- 
2.24.1

