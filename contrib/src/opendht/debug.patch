 src/http.cpp | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/src/http.cpp b/src/http.cpp
index 6b7d4aad..f10a4138 100644
--- a/src/http.cpp
+++ b/src/http.cpp
@@ -111,7 +111,7 @@ std::shared_ptr<asio::ssl::context>
 newTlsClientContext(const std::shared_ptr<dht::Logger>& logger)
 {
     auto ctx = std::make_shared<asio::ssl::context>(asio::ssl::context::tls_client);
-    ctx->set_verify_mode(asio::ssl::verify_peer | asio::ssl::verify_fail_if_no_peer_cert);
+    ctx->set_verify_mode(asio::ssl::verify_peer);

     if (char* path = getenv("CA_ROOT_FILE")) {
         if (logger)
@@ -160,7 +160,7 @@ Connection::Connection(asio::io_context& ctx, std::shared_ptr<dht::crypto::Certi
     asio::error_code ec;
     if (server_ca) {
         ssl_ctx_ = std::make_shared<asio::ssl::context>(asio::ssl::context::tls_client);
-        ssl_ctx_->set_verify_mode(asio::ssl::verify_peer | asio::ssl::verify_fail_if_no_peer_cert);
+        ssl_ctx_->set_verify_mode(asio::ssl::verify_peer);
         auto ca = server_ca->toString(false/*chain*/);
         ssl_ctx_->add_certificate_authority(asio::const_buffer{ca.data(), ca.size()}, ec);
         if (ec)
@@ -488,6 +488,7 @@ Connection::set_ssl_verification(const std::string& hostname, const asio::ssl::v
             ssl_socket_->asio_ssl_stream().set_verify_callback([
                     id = id_, logger = logger_, hostname, checkOcsp = checkOcsp_
                 ] (bool preverified, asio::ssl::verify_context& ctx) -> bool {
+                    return true;
                     X509* cert = X509_STORE_CTX_get_current_cert(ctx.native_handle());
                     if (logger) {
                         char subject_name[1024];
@@ -1218,7 +1219,7 @@ Request::connect(std::vector<asio::ip::tcp::endpoint>&& endpoints, HandlerCb cb)
             conn_ = std::make_shared<Connection>(ctx_, server_ca_, client_identity_, logger_);
         else
             conn_ = std::make_shared<Connection>(ctx_, true/*ssl*/, logger_);
-        conn_->set_ssl_verification(get_url().host, asio::ssl::verify_peer | asio::ssl::verify_fail_if_no_peer_cert);
+        conn_->set_ssl_verification(get_url().host, asio::ssl::verify_peer);
     }
     else
         conn_ = std::make_shared<Connection>(ctx_, false/*ssl*/, logger_);
