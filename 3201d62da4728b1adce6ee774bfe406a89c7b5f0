{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0e3261da_b91533b4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 856
      },
      "writtenOn": "2022-06-15T16:02:35Z",
      "side": 1,
      "message": "just few questions\n-1 is for the break (2nd comment)",
      "revId": "3201d62da4728b1adce6ee774bfe406a89c7b5f0",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93d60741_0b40d0e5",
        "filename": "src/conference.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1531,
      "author": {
        "id": 856
      },
      "writtenOn": "2022-06-15T16:02:35Z",
      "side": 1,
      "message": "we might need to check recv before use",
      "revId": "3201d62da4728b1adce6ee774bfe406a89c7b5f0",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f85c6a3b_e5d2e947",
        "filename": "src/conference.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1531,
      "author": {
        "id": 220
      },
      "writtenOn": "2022-06-15T18:07:52Z",
      "side": 1,
      "message": "This couldn\u0027t be false as getRtpSessionList doesn\u0027t return a nullptr and we only filter on video. If the case fails it\u0027s a bug before",
      "parentUuid": "93d60741_0b40d0e5",
      "revId": "3201d62da4728b1adce6ee774bfe406a89c7b5f0",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c660a2e7_fc6f48a8",
        "filename": "src/conference.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1533,
      "author": {
        "id": 856
      },
      "writtenOn": "2022-06-15T16:02:35Z",
      "side": 1,
      "message": "we iterate on all rtp streams, but we break on the first one ?\nis that what we want ?",
      "revId": "3201d62da4728b1adce6ee774bfe406a89c7b5f0",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d877565f_ef5a3a5e",
        "filename": "src/conference.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1533,
      "author": {
        "id": 220
      },
      "writtenOn": "2022-06-15T18:07:52Z",
      "side": 1,
      "message": "Yes and no. Because resizeRemoteParticipants is called on confInfo from the call, this is only called in the case or we have a video conference inside another video conference.\nFor now, in this case, and because the peer is a conference, we can only have one media stream anw. With or without the break it will not change anything, and to be honest, I\u0027m not sure we will ever support that a peer is a conference with other video streams because they already have a video mixer.",
      "parentUuid": "c660a2e7_fc6f48a8",
      "revId": "3201d62da4728b1adce6ee774bfe406a89c7b5f0",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "034ef3cd_d29f87eb",
        "filename": "src/conference.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1533,
      "author": {
        "id": 856
      },
      "writtenOn": "2022-06-16T19:40:48Z",
      "side": 1,
      "message": "to be honest, it\u0027s very hard to follow the logic. It\u0027s already complicated with a one conf.\nAnyway, at least can you add a comment and explain why we break here.",
      "parentUuid": "d877565f_ef5a3a5e",
      "revId": "3201d62da4728b1adce6ee774bfe406a89c7b5f0",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "859b7a8a_1e3e611f",
        "filename": "src/plugin/callservicesmanager.cpp",
        "patchSetId": 10
      },
      "lineNbr": 289,
      "author": {
        "id": 856
      },
      "writtenOn": "2022-06-15T16:02:35Z",
      "side": 1,
      "message": "we are assuming that rtp session ptr is not null. It was the case with mono-stream, are we still sure for multi-stream. \nWe could just add an assert for sanity.",
      "revId": "3201d62da4728b1adce6ee774bfe406a89c7b5f0",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3ad143d_7e1e087a",
        "filename": "src/plugin/callservicesmanager.cpp",
        "patchSetId": 10
      },
      "lineNbr": 289,
      "author": {
        "id": 220
      },
      "writtenOn": "2022-06-15T18:07:52Z",
      "side": 1,
      "message": "if we do not have any video, the list will be empty and the line after this will not be called.",
      "parentUuid": "859b7a8a_1e3e611f",
      "revId": "3201d62da4728b1adce6ee774bfe406a89c7b5f0",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a264fb9_445946b9",
        "filename": "src/plugin/callservicesmanager.cpp",
        "patchSetId": 10
      },
      "lineNbr": 289,
      "author": {
        "id": 856
      },
      "writtenOn": "2022-06-16T19:40:48Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f3ad143d_7e1e087a",
      "revId": "3201d62da4728b1adce6ee774bfe406a89c7b5f0",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "688a813f_31671bce",
        "filename": "src/sip/sipcall.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1066,
      "author": {
        "id": 856
      },
      "writtenOn": "2022-06-15T16:02:35Z",
      "side": 1,
      "message": "I dont know if you removed the space before the colon (:), but usually there is one\nhttps://en.cppreference.com/w/cpp/language/range-for",
      "range": {
        "startLine": 1066,
        "startChar": 23,
        "endLine": 1066,
        "endChar": 31
      },
      "revId": "3201d62da4728b1adce6ee774bfe406a89c7b5f0",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "314614cc_daa35a03",
        "filename": "src/sip/sipcall.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1066,
      "author": {
        "id": 220
      },
      "writtenOn": "2022-06-15T18:07:52Z",
      "side": 1,
      "message": "hmm weird, clang should do this. but this is changed higher in the stack (https://review.jami.net/c/jami-daemon/+/21517/27), so I guess I will let this for now",
      "parentUuid": "688a813f_31671bce",
      "range": {
        "startLine": 1066,
        "startChar": 23,
        "endLine": 1066,
        "endChar": 31
      },
      "revId": "3201d62da4728b1adce6ee774bfe406a89c7b5f0",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5488bfd4_75bf6a9b",
        "filename": "src/sip/sipcall.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1864,
      "author": {
        "id": 856
      },
      "writtenOn": "2022-06-15T16:02:35Z",
      "side": 1,
      "message": "I have a concern regarding the codec type. Is it a call attribute or stream attribute ?\nPer SIP/SDP/RTP specs, it\u0027s a stream attribute. I understand that we do not want to support that (at least for now). May be we could be more explicit (by checking that all the streams use the same code for instance). But no big deal.",
      "revId": "3201d62da4728b1adce6ee774bfe406a89c7b5f0",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26674b8e_366bbcf9",
        "filename": "src/sip/sipcall.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1864,
      "author": {
        "id": 220
      },
      "writtenOn": "2022-06-15T18:07:52Z",
      "side": 1,
      "message": "For me, it\u0027s also a per stream info, because we can negotiate it per stream. However the current API is per call for DRing, and I think I do not need to break it for now and we do not negotiate different codecs per stream (at least for now), so I think we can keep it as it is for now, but you are right.",
      "parentUuid": "5488bfd4_75bf6a9b",
      "revId": "3201d62da4728b1adce6ee774bfe406a89c7b5f0",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76f2e410_aebf3dd1",
        "filename": "src/sip/sipcall.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1864,
      "author": {
        "id": 856
      },
      "writtenOn": "2022-06-16T19:40:48Z",
      "side": 1,
      "message": "may be just be more specific in the comment (for those who not familiar with the specs) that the specs allows it but we chose no to.",
      "parentUuid": "26674b8e_366bbcf9",
      "revId": "3201d62da4728b1adce6ee774bfe406a89c7b5f0",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d7e7bb9_9026dcfb",
        "filename": "src/sip/sipcall.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2926,
      "author": {
        "id": 856
      },
      "writtenOn": "2022-06-15T16:02:35Z",
      "side": 1,
      "message": "If the second source is a file, the orientation won\u0027t be good.",
      "revId": "3201d62da4728b1adce6ee774bfe406a89c7b5f0",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35f5a0dc_706b3763",
        "filename": "src/sip/sipcall.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2926,
      "author": {
        "id": 220
      },
      "writtenOn": "2022-06-15T18:07:52Z",
      "side": 1,
      "message": "Yes, but the rotation management must get some changes to be able to rotate only one stream, which is out-of-scope",
      "parentUuid": "8d7e7bb9_9026dcfb",
      "revId": "3201d62da4728b1adce6ee774bfe406a89c7b5f0",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee195d19_754a3c45",
        "filename": "src/sip/sipcall.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2926,
      "author": {
        "id": 856
      },
      "writtenOn": "2022-06-16T19:40:48Z",
      "side": 1,
      "message": "this means that the MS feature can not be enabled for devices that changes the orientations of the video (mobile devices in particular) until the rotation is fixed.\nIMHO, this is a blocker for mobile devices.",
      "parentUuid": "35f5a0dc_706b3763",
      "revId": "3201d62da4728b1adce6ee774bfe406a89c7b5f0",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97ecfd9b_5108aa3c",
        "filename": "src/sip/sipcall.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2926,
      "author": {
        "id": 220
      },
      "writtenOn": "2022-06-16T19:45:53Z",
      "side": 1,
      "message": "it\u0027s the client to choose, but the multistream can be enabled, and the client avoid to use it.\n\nFor screensharing+camera is generally not a problem, because if you need to rotate your screen, your camera will rotate too. It\u0027s just a blocker for the UI if they want to request media changes with several rotations. For the daemon, it\u0027s ok-ish",
      "parentUuid": "ee195d19_754a3c45",
      "revId": "3201d62da4728b1adce6ee774bfe406a89c7b5f0",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    }
  ]
}