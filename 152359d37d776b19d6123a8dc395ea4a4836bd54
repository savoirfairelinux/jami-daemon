{
  "comments": [
    {
      "key": {
        "uuid": "e1ee65c7_d6434c6b",
        "filename": "src/media/audio/audio_input.cpp",
        "patchSetId": 53
      },
      "lineNbr": 159,
      "author": {
        "id": 6
      },
      "writtenOn": "2020-02-13T16:35:26Z",
      "side": 1,
      "message": "Why is this needed in audio_input ?",
      "range": {
        "startLine": 159,
        "startChar": 8,
        "endLine": 159,
        "endChar": 26
      },
      "revId": "152359d37d776b19d6123a8dc395ea4a4836bd54",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d389b57_e4f280dd",
        "filename": "src/media/audio/audio_input.cpp",
        "patchSetId": 53
      },
      "lineNbr": 200,
      "author": {
        "id": 6
      },
      "writtenOn": "2020-02-13T16:35:26Z",
      "side": 1,
      "message": "demuxer is only used here, maybe configureFilePlayback could just take a MediaDecoder ?",
      "range": {
        "startLine": 200,
        "startChar": 50,
        "endLine": 200,
        "endChar": 57
      },
      "revId": "152359d37d776b19d6123a8dc395ea4a4836bd54",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "296912ec_c34b6b04",
        "filename": "src/media/media_decoder.h",
        "patchSetId": 53
      },
      "lineNbr": 78,
      "author": {
        "id": 6
      },
      "writtenOn": "2020-02-13T16:35:26Z",
      "side": 1,
      "message": "ReadBufferOverflow",
      "range": {
        "startLine": 78,
        "startChar": 8,
        "endLine": 78,
        "endChar": 25
      },
      "revId": "152359d37d776b19d6123a8dc395ea4a4836bd54",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7562b9b2_6afa4869",
        "filename": "src/media/media_decoder.h",
        "patchSetId": 53
      },
      "lineNbr": 212,
      "author": {
        "id": 6
      },
      "writtenOn": "2020-02-13T16:35:26Z",
      "side": 1,
      "message": "use queue or list",
      "range": {
        "startLine": 212,
        "startChar": 51,
        "endLine": 212,
        "endChar": 63
      },
      "revId": "152359d37d776b19d6123a8dc395ea4a4836bd54",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "851559ea_b3999a49",
        "filename": "src/media/media_player.cpp",
        "patchSetId": 53
      },
      "lineNbr": 33,
      "author": {
        "id": 6
      },
      "writtenOn": "2020-02-13T16:35:26Z",
      "side": 1,
      "message": "copy not needed",
      "range": {
        "startLine": 33,
        "startChar": 4,
        "endLine": 33,
        "endChar": 80
      },
      "revId": "152359d37d776b19d6123a8dc395ea4a4836bd54",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b25d64a_5b569693",
        "filename": "src/media/media_player.cpp",
        "patchSetId": 53
      },
      "lineNbr": 52,
      "author": {
        "id": 6
      },
      "writtenOn": "2020-02-13T16:35:26Z",
      "side": 1,
      "message": "if the thread it only used once for initialization, you can use dht::ThreadPool::io().run();",
      "range": {
        "startLine": 50,
        "startChar": 4,
        "endLine": 52,
        "endChar": 7
      },
      "revId": "152359d37d776b19d6123a8dc395ea4a4836bd54",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "951fb3a9_6b426657",
        "filename": "src/media/media_player.cpp",
        "patchSetId": 53
      },
      "lineNbr": 120,
      "author": {
        "id": 6
      },
      "writtenOn": "2020-02-13T16:35:26Z",
      "side": 1,
      "message": "* setStreamSync ?\n* could also start useSynchronization ?",
      "range": {
        "startLine": 120,
        "startChar": 21,
        "endLine": 120,
        "endChar": 34
      },
      "revId": "152359d37d776b19d6123a8dc395ea4a4836bd54",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4aa7fac8_896f1e13",
        "filename": "src/media/media_player.cpp",
        "patchSetId": 53
      },
      "lineNbr": 204,
      "author": {
        "id": 6
      },
      "writtenOn": "2020-02-13T16:35:26Z",
      "side": 1,
      "message": "* never detach thread, especially if capturing \"this\" (very high risk of use-after-free)\n* starting a thread is a long and expensive operation. Don\u0027t do that for every frame.",
      "range": {
        "startLine": 202,
        "startChar": 8,
        "endLine": 204,
        "endChar": 20
      },
      "revId": "152359d37d776b19d6123a8dc395ea4a4836bd54",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cefc376e_d59c9697",
        "filename": "src/media/video/video_input.h",
        "patchSetId": 53
      },
      "lineNbr": 50,
      "author": {
        "id": 6
      },
      "writtenOn": "2020-02-13T16:35:26Z",
      "side": 1,
      "message": "why is this in videoinput.h ?",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 50,
        "endChar": 0
      },
      "revId": "152359d37d776b19d6123a8dc395ea4a4836bd54",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": true
    }
  ]
}