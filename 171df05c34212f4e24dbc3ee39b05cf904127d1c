{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8a01a099_adb43563",
        "filename": "src/jamidht/jamiaccount.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3521,
      "author": {
        "id": 5
      },
      "writtenOn": "2022-12-21T22:11:44Z",
      "side": 1,
      "message": "MAJOR SonarQube violation:\n\n\ndata argument not used by format string\n\n\nRead more: https://sonar-jami.savoirfairelinux.net/coding_rules#rule_key\u003dClangTidy%3Aclang-diagnostic-format-extra-args",
      "revId": "171df05c34212f4e24dbc3ee39b05cf904127d1c",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a168fe31_9b64e7d6",
        "filename": "src/jamidht/jamiaccount.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3521,
      "author": {
        "id": 5
      },
      "writtenOn": "2022-12-21T22:11:44Z",
      "side": 1,
      "message": "CRITICAL SonarQube violation:\n\n\ncannot pass object of non-trivial type \u0027Json::String\u0027 (aka \u0027basic_string\u003cchar, char_traits\u003cchar\u003e, std::allocator\u003cchar\u003e \u003e\u0027) through variadic function; call will abort at runtime\n\n\nRead more: https://sonar-jami.savoirfairelinux.net/coding_rules#rule_key\u003dClangTidy%3Aclang-diagnostic-non-pod-varargs",
      "revId": "171df05c34212f4e24dbc3ee39b05cf904127d1c",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    }
  ]
}