{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1d754ea1_77f0ad3b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 26
      },
      "lineNbr": 0,
      "author": {
        "id": 220
      },
      "writtenOn": "2021-09-24T17:55:26Z",
      "side": 1,
      "message": "Seems to introduce a crash (maybe it\u0027s another patch in the stack and not this one)\n\n(gdb) \n#0  0x00007ffff63579e5 in raise () from /lib64/libc.so.6\n#1  0x00007ffff63408a4 in abort () from /lib64/libc.so.6\n#2  0x00007ffff66e6926 in __gnu_cxx::__verbose_terminate_handler() [clone .cold] () from /lib64/libstdc++.so.6\n#3  0x00007ffff66f208c in __cxxabiv1::__terminate(void (*)()) () from /lib64/libstdc++.so.6\n#4  0x00007ffff66f1119 in __cxa_call_terminate () from /lib64/libstdc++.so.6\n#5  0x00007ffff66f1a61 in __gxx_personality_v0 () from /lib64/libstdc++.so.6\n#6  0x00007ffff64f7bff in _Unwind_RaiseException_Phase2 () from /lib64/libgcc_s.so.1\n#7  0x00007ffff64f862e in _Unwind_Resume () from /lib64/libgcc_s.so.1\n#8  0x00000000005c8870 in jami::Account::hangupCalls (this\u003d0x623000237110) at account.cpp:159\n#9  0x0000000000b083d9 in jami::JamiAccount::~JamiAccount (this\u003d0x623000237110, __in_chrg\u003d\u003coptimized out\u003e) at jamidht/jamiaccount.cpp:337\n#10 0x0000000000d66cce in __gnu_cxx::new_allocator\u003cjami::JamiAccount\u003e::destroy\u003cjami::JamiAccount\u003e (this\u003d0x623000237110, __p\u003d0x623000237110) at /usr/include/c++/10/ext/new_allocator.h:156\n#11 0x0000000000d66c19 in std::allocator_traits\u003cstd::allocator\u003cjami::JamiAccount\u003e \u003e::destroy\u003cjami::JamiAccount\u003e (__a\u003d..., __p\u003d0x623000237110) at /usr/include/c++/10/bits/alloc_traits.h:531\n#12 0x0000000000d667d7 in std::_Sp_counted_ptr_inplace\u003cjami::JamiAccount, std::allocator\u003cjami::JamiAccount\u003e, (__gnu_cxx::_Lock_policy)2\u003e::_M_dispose (this\u003d0x623000237100) at /usr/include/c++/10/bits/shared_ptr_base.h:560\n#13 0x00000000004a289b in std::_Sp_counted_base\u003c(__gnu_cxx::_Lock_policy)2\u003e::_M_release (this\u003d0x623000237100) at /usr/include/c++/10/bits/shared_ptr_base.h:158\n#14 0x000000000049e714 in std::__shared_count\u003c(__gnu_cxx::_Lock_policy)2\u003e::~__shared_count (this\u003d0x7fffffffc808, __in_chrg\u003d\u003coptimized out\u003e) at /usr/include/c++/10/bits/shared_ptr_base.h:733\n#15 0x00000000004ee2b2 in std::__shared_ptr\u003cjami::Account, (__gnu_cxx::_Lock_policy)2\u003e::~__shared_ptr (this\u003d0x7fffffffc800, __in_chrg\u003d\u003coptimized out\u003e) at /usr/include/c++/10/bits/shared_ptr_base.h:1183\n#16 0x00000000004ee2ce in std::shared_ptr\u003cjami::Account\u003e::~shared_ptr (this\u003d0x7fffffffc800, __in_chrg\u003d\u003coptimized out\u003e) at /usr/include/c++/10/bits/shared_ptr.h:121\n#17 0x0000000000555399 in jami::Manager::removeAccount (this\u003d0x25f3020 \u003cjami::Manager::instance()::instance\u003e, accountID\u003d\"2e182d12c4eb293c\", flush\u003dtrue) at manager.cpp:3026\n#18 0x00000000004b89bd in wait_for_removal_of (accounts\u003dstd::vector of length 4, capacity 4 \u003d {...}, timeout\u003d...) at common.cpp:132\n#19 0x00000000004811d6 in jami::test::ConferenceTest::tearDown (this\u003d0x615000434480) at call/conference.cpp:124\n#20 0x00000000004b65f2 in CppUnit::TestCaller\u003cjami::test::ConferenceTest\u003e::tearDown (this\u003d0x6080001d19a0) at /usr/include/cppunit/TestCaller.h:185\n#21 0x00007ffff75b03e1 in CppUnit::TestCaseMethodFunctor::operator()() const () from /lib64/libcppunit-1.15.so.1\n#22 0x00007ffff75ba220 in CppUnit::DefaultProtector::protect(CppUnit::Functor const\u0026, CppUnit::ProtectorContext const\u0026) () from /lib64/libcppunit-1.15.so.1\n#23 0x00007ffff75b2fce in CppUnit::ProtectorChain::protect(CppUnit::Functor const\u0026, CppUnit::ProtectorContext const\u0026) () from /lib64/libcppunit-1.15.so.1\n#24 0x00007ffff75bc04e in CppUnit::TestResult::protect(CppUnit::Functor const\u0026, CppUnit::Test*, std::__cxx11::basic_string\u003cchar, std::char_traits\u003cchar\u003e, std::allocator\u003cchar\u003e \u003e const\u0026) () from /lib64/libcppunit-1.15.so.1\n#25 0x00007ffff75b62e4 in CppUnit::TestCase::run(CppUnit::TestResult*) () from /lib64/libcppunit-1.15.so.1\n#26 0x00007ffff75ba61d in CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*) () from /lib64/libcppunit-1.15.so.1\n#27 0x00007ffff75ba439 in CppUnit::TestComposite::run(CppUnit::TestResult*) () from /lib64/libcppunit-1.15.so.1\n#28 0x00007ffff75ba61d in CppUnit::TestComposite::doRunChildTests(CppUnit::TestResult*) () from /lib64/libcppunit-1.15.so.1\n#29 0x00007ffff75ba439 in CppUnit::TestComposite::run(CppUnit::TestResult*) () from /lib64/libcppunit-1.15.so.1\n#30 0x00007ffff75baf53 in CppUnit::TestResult::runTest(CppUnit::Test*) () from /lib64/libcppunit-1.15.so.1\n#31 0x00007ffff75bfcc1 in CppUnit::TestRunner::run(CppUnit::TestResult\u0026, std::__cxx11::basic_string\u003cchar, std::char_traits\u003cchar\u003e, std::allocator\u003cchar\u003e \u003e const\u0026) () from /lib64/libcppunit-1.15.so.1\n#32 0x00007ffff75c2990 in CppUnit::TextTestRunner::run(std::__cxx11::basic_string\u003cchar, std::char_traits\u003cchar\u003e, std::allocator\u003cchar\u003e \u003e, bool, bool, bool) () from /lib64/libcppunit-1.15.so.1\n#33 0x0000000000491ce6 in main () at call/conference.cpp:411\n\n\nJenkins got the same for ut_conference",
      "revId": "19f04e7ff79fc94d0642f7dade01e6499fc3cf67",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    }
  ]
}