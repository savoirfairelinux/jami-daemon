if(POLICY CMP0017)
   cmake_policy(SET CMP0017 NEW)
endif(POLICY CMP0017)

if(POLICY CMP0022)
   cmake_policy(SET CMP0022 NEW)
endif(POLICY CMP0022)

# set(CMAKE_AUTOMOC ON)

find_package(PkgConfig REQUIRED)
pkg_check_modules(GTK3 REQUIRED gtk+-3.0)

IF(${ENABLE_QT5} MATCHES true)
   FIND_PACKAGE(Qt5Core)
ENDIF(${ENABLE_QT5} MATCHES true)

ADD_DEFINITIONS(
   ${QT_DEFINITIONS}
   -fexceptions
   -Wno-deprecated-declarations
   -DDATA_INSTALL_DIR="\\\"${DATA_INSTALL_DIR}\\\""
   -DSHARE_INSTALL_PREFIX="\\\"${SHARE_INSTALL_PREFIX}\\\""
#   -Werror
   -Wall
   -Wextra
#    -Wmissing-declarations
   -Wmissing-noreturn
   -Wpointer-arith
   -Wcast-align
   -Wwrite-strings
   -Wformat-nonliteral
   -Wformat-security
   -Wswitch-enum
   -Winit-self
   -Wmissing-include-dirs
   -Wundef
   -Wmissing-format-attribute
   -Wno-reorder
   -Wunused
   -Wuninitialized
   -Woverloaded-virtual
#    -Wsuggest-attribute=const
#    -Wsystem-headers
)

if (CMAKE_COMPILER_IS_GNUCC)
   execute_process(COMMAND ${CMAKE_C_COMPILER} -dumpversion OUTPUT_VARIABLE GCC_VERSION)
   if (GCC_VERSION VERSION_LESS 4.6.9 OR GCC_VERSION VERSION_EQUAL 4.6)
      #GCC 4.6 version of those warnings does detect valid C++0x/C++11 as invalid.
      ADD_DEFINITIONS(
         -Wno-error=pragmas
         -Wno-pragmas
         -Wno-error
      )
   endif()
   if (GCC_VERSION VERSION_GREATER 4.7 OR GCC_VERSION VERSION_EQUAL 4.7)
      ADD_DEFINITIONS(
         -Wmaybe-uninitialized
         -Wunused-local-typedefs
         -pedantic
      )
   endif()
   if (GCC_VERSION VERSION_GREATER 4.8 OR GCC_VERSION VERSION_EQUAL 4.8)
#       ADD_DEFINITIONS("-Wzero-as-null-pointer-constant")
#       ADD_DEFINITIONS( -DENABLE_IGNORE_NULL=true )
   endif()
else()
   ADD_DEFINITIONS(-Wno-unknown-pragmas)
endif()

ADD_DEFINITIONS("-std=c++0x")

#Build pure Qt Library
add_subdirectory( lib  )

#Make sure it can access DBUS autogenerated files
include_directories(${CMAKE_BINARY_DIR})
include_directories(${CMAKE_CURRENT_BINARY_DIR}/lib )
include_directories(${GTK3_INCLUDE_DIRS})
link_directories(${GTK3_LIBRARY_DIRS})
add_definitions(${GTK3_CFLAGS_OTHER})

MESSAGE("CMAKE_BUILD_TYPE = ${CMAKE_BUILD_TYPE}")

IF(${CMAKE_BUILD_TYPE} MATCHES Release)
   MESSAGE("NO DEBUG OUTPUT")
   ADD_DEFINITIONS( -DQT_NO_DEBUG_OUTPUT)
ENDIF(${CMAKE_BUILD_TYPE} MATCHES Release)

SET(
   SRC_FILES
   main.cpp
   sflphone_client.cpp
   gtkqlistmodel.cpp
   gtkqtreemodel.cpp
   gtkaccessproxymodel.cpp
   ringapplicationwindow.cpp
   resources.c
)

ADD_EXECUTABLE(ring-client ${SRC_FILES})

TARGET_LINK_LIBRARIES(ring-client qtsflphone ${GTK3_LIBRARIES} ${QT_QTCORE_LIBRARY})
