{
  "comments": [
    {
      "key": {
        "uuid": "80f37d16_b6434074",
        "filename": "test/unitTest/call/call.cpp",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 856
      },
      "writtenOn": "2021-05-25T18:03:55Z",
      "side": 1,
      "message": "subtracting unsigned can be very tricky. If \"currentAccSize\" \u003c (bob2Id.empty() ? 2 : 3) could be very large, and the condition in the callback, will always be true.\nMay be this is harmless as if this happens, it\u0027s most likely that the test has failed anyway.\nPersonally, I would add a check or an assert on the condition, such as:\nCPPUNIT_ASSERT(currentAccSize\" \u003e\u003d (bob2Id.empty() ? 2 : 3);",
      "revId": "ce6745c2cc770f9f3bb164db642a7e5b8815ba62",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7acb59c2_e525291b",
        "filename": "test/unitTest/call/call.cpp",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 220
      },
      "writtenOn": "2021-05-25T18:06:49Z",
      "side": 1,
      "message": "this will be worse because it will fail the tearDown, this is for cleaning up, if currentAccSize \u003c 2 this means that the setup failed, so that there is nothing to clean and that cppunit didn\u0027t even run the setup",
      "parentUuid": "80f37d16_b6434074",
      "revId": "ce6745c2cc770f9f3bb164db642a7e5b8815ba62",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4e39bb0_c376f6e8",
        "filename": "test/unitTest/call/call.cpp",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 856
      },
      "writtenOn": "2021-05-25T18:33:36Z",
      "side": 1,
      "message": "I dont think it would be worse. I know it\u0027s unlikely to happen, but at least, if it does we would have clue what went wrong.\nBut anyway, I want block the review because of this.",
      "parentUuid": "7acb59c2_e525291b",
      "revId": "ce6745c2cc770f9f3bb164db642a7e5b8815ba62",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10e235bd_d5070a2e",
        "filename": "test/unitTest/call/call.cpp",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 220
      },
      "writtenOn": "2021-05-25T18:35:31Z",
      "side": 1,
      "message": "I mean it will be worse because the whole point of the tearDown is to cleanup the env. So, asserting there will just avoid removeAccount() to be called and let a dirty env if fails. Moreover if tearDown() is called it\u0027s guaranteed that setUp() is called, so that at least account are generated.",
      "parentUuid": "f4e39bb0_c376f6e8",
      "revId": "ce6745c2cc770f9f3bb164db642a7e5b8815ba62",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": true
    }
  ]
}