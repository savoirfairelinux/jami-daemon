{
  "comments": [
    {
      "key": {
        "uuid": "ef1400b8_84d67573",
        "filename": "src/jamidht/conversationrepository.cpp",
        "patchSetId": 42
      },
      "lineNbr": 724,
      "author": {
        "id": 5
      },
      "writtenOn": "2020-11-16T17:19:07Z",
      "side": 1,
      "message": "MAJOR SonarQube violation:\n\n\nValue stored to \u0027x\u0027 during its initialization is never read\n\n\nRead more: https://sonar-jami.savoirfairelinux.net/coding_rules#rule_key\u003dClangTidy%3Aclang-analyzer-deadcode.DeadStores",
      "revId": "5351133715f7f307d121613d6562a65b7bcf9774",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "264e3734_e4220ff7",
        "filename": "src/jamidht/jamiaccount.cpp",
        "patchSetId": 42
      },
      "lineNbr": 2286,
      "author": {
        "id": 5
      },
      "writtenOn": "2020-11-16T17:19:07Z",
      "side": 1,
      "message": "MINOR SonarQube violation:\n\n\n\u0027find_last_of\u0027 called with a string literal consisting of a single character; consider using the more effective overload accepting a character\n\n\nRead more: https://sonar-jami.savoirfairelinux.net/coding_rules#rule_key\u003dClangTidy%3Aperformance-faster-string-find",
      "revId": "5351133715f7f307d121613d6562a65b7bcf9774",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    }
  ]
}