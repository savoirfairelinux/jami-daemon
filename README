COPYRIGHT NOTICE

Copyright (C) 2004-2015 Savoir-Faire Linux Inc.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

Additional permission under GNU GPL version 3 section 7:

If you modify this program, or any covered work, by linking or
combining it with the OpenSSL project's OpenSSL library (or a
modified version of that library), containing parts covered by the
terms of the OpenSSL or SSLeay licenses, Savoir-Faire Linux Inc.
grants you additional permission to convey the resulting work.
Corresponding Source for a non-source form of such a combination
shall include the source code for the parts of OpenSSL used as well
as that of the covered work.


Introduction
------------

Ring is a Voice-over-IP software phone. We want it to be:
- user friendly (fast, sleek, easy to learn interface)
- professional grade (transfers, holds, optimal audio quality)
- fully compatible with Asterisk (SIP and IAX protocols)
- de-centralized call (P2P-DHT)
- customizable

As the SIP/audio daemon and the user interface are separate processes,
it is easy to provide different user interfaces. Ring comes with
various graphical user interfaces and even scripts to control the daemon from
the shell.

Ring is currently used by the support team of Savoir-Faire Linux Inc.

More information is available on the project homepage:
  http://www.ring.cx/

This source tree contains the daemon application only, DRing, that handles
the business logic of Ring. UI are located in differents repositories.
Check our client subprojects here:
https://projects.savoirfairelinux.com/projects/ring


Short description of content of source tree
-------------------------------------------

- src/ is the core of DRing.
- bin/ contains applications main code.
- bin/dbus, the D-Bus xml interfaces, and c++ bindings


About Savoir-Faire Linux
------------------------

Savoir-Faire Linux is a consulting company based in Montreal, Quebec.
For more information, please check out our website:
http://www.savoirfairelinux.com/


How to compile on Linux
-----------------------

1) Compile the dependencies first

cd ../contrib/
mkdir native
cd native
../bootstrap
make

2) Then the dring application

cd ../../
./autogen.sh
./configure
make
make install

Done !

More details available here:
https://projects.savoirfairelinux.com/projects/ring/wiki/How_to_build


How to compile on OSX
---------------------

# These first steps are only necessary if you don't use a package manager.
cd extras/tools
./bootstrap
make
export PATH=$PATH:/location/of/ring/daemon/extras/tools/build/bin

# Or, use your favorite package manager to install the necessary tools
(macports or brew).
automake, pkg-config, libtool, gettext, yasm

# Compile the dependencies
cd contrib
mkdir native
cd native
../bootstrap
make -j

# Then the daemon
cd ../../
./autogen.sh
./configure --without-alsa --without-pulse --without-dbus --prefix=<install_path>
make

If you want to link against libringclient and native client easiest way is to
add to ./configure: --prefix=<prefix_path>

Do a little dance!


Common Issues
-------------

autopoint not found: When using Homebrew, autopoint is not found even when
gettext is installed, because symlinks are not created.
Run: 'brew link --force gettext' to fix it.


Clang compatibility (developers only)
-------------------------------------

It is possible to compile dring with Clang by setting CC and CXX variables
to 'clang' and 'clang++' respectively when calling ./configure.

Currently it is not possible to use the DBus interface mechanism, and the
interaction between daemon and client will not work; for each platform where
dbus is not available the client should implement all the methods in the
*_stub.cpp files.


SIP accounts
---------------------

You may register an existing SIP account through the account wizard in both
clients (KDE and GNOME).
By doing this, you will be able to call other accounts known to this server.


Contributing to Ring
------------------------

Of course we love patches. And contributions. And spring rolls.

Development website: http://projects.savoirfairelinux.com/projects/ring/wiki

Do not hesitate to join us and post comments, suggestions, questions
and general feedback on the Ring mailing-list:
http://lists.savoirfairelinux.net/mailman/listinfo/ring

Bug reports:
http://projects.savoirfairelinux.com/projects/ring/wiki/BugReports

IRC (on #freenode):
#sflphone

  -- The Ring Team
