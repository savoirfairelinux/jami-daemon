COPYRIGHT NOTICE

Copyright (C) 2004-2018 Savoir-faire Linux Inc.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.


Introduction
------------

GNU Ring is a Voice-over-IP software phone. We want it to be:
- user friendly (fast, sleek, easy to learn interface)
- professional grade (transfers, holds, optimal audio quality)
- compatible with Asterisk (using SIP account)
- decentralized call (P2P-DHT)
- customizable

As the SIP/audio daemon and the user interface are separate processes,
it is easy to provide different user interfaces. GNU Ring comes with
various graphical user interfaces and even scripts to control the daemon from
the shell.

GNU Ring is currently used by the support team of Savoir-faire Linux Inc.

More information is available on the project homepage:
  https://www.ring.cx/

This source tree contains the daemon application only, DRing, that handles
the business logic of GNU Ring. UIs are located in differents repositories. See
the Contributing section for more information.


Short description of content of source tree
-------------------------------------------

- src/ is the core of DRing.
- bin/ contains applications main code.
- bin/dbus, the D-Bus XML interfaces, and C++ bindings
- bin/restcpp, the C++ REST API implemented with Restbed

About Savoir-faire Linux
------------------------

Savoir-faire Linux is a consulting company based in Montreal, Quebec.
For more information, please check out our website:
https://www.savoirfairelinux.com/


How to compile on Linux
-----------------------

1) Compile the dependencies first

cd contrib
mkdir native
cd native
../bootstrap
make

2) Then the dring application

cd ../../
./autogen.sh
./configure
make
make install

Done !

More details available here:
https://tuleap.ring.cx/plugins/mediawiki/wiki/ring/index.php/Build_Instructions


How to compile on OSX
---------------------

# These first steps are only necessary if you don't use a package manager.
cd extras/tools
./bootstrap
make
export PATH=$PATH:/location/of/ring/daemon/extras/tools/build/bin

# Or, use your favorite package manager to install the necessary tools
(macports or brew).
automake, pkg-config, libtool, gettext, yasm

# Compile the dependencies
cd contrib
mkdir native
cd native
../bootstrap
make -j

# Then the daemon
cd ../../
./autogen.sh
./configure  --without-dbus --prefix=<install_path>
make

If you want to link against libringclient and native client easiest way is to
add to ./configure: --prefix=<prefix_path>

Do a little dance!


Common Issues
-------------

autopoint not found: When using Homebrew, autopoint is not found even when
gettext is installed, because symlinks are not created.
Run: 'brew link --force gettext' to fix it.


Clang compatibility (developers only)
-------------------------------------

It is possible to compile dring with Clang by setting CC and CXX variables
to 'clang' and 'clang++' respectively when calling ./configure.

Currently it is not possible to use the DBus interface mechanism, and the
interaction between daemon and client will not work; for each platform where
D-Bus is not available the client should implement all the methods in the
*_stub.cpp files.

How to compile with the REST API
--------------------------------

GNU Ring offers two REST API. One written in C++, and the other written in Cython.
Up to this date, only the C++ API is available. The Cython API will soon follow.

To compile Ring-daemon with the C++ REST API, follow these two steps :

1) Compile the dependencies
cd contrib
mkdir native
cd native
../bootstrap
make
make .restbed

2) Then compile the daemon
cd ../../
./autogen.sh
./configure --without-dbus --with-restcpp
make

SIP accounts
---------------------

You may register an existing SIP account through the account wizard in both
clients (KDE and GNOME).
By doing this, you will be able to call other accounts known to this server.


Contributing to GNU Ring
------------------------

Of course we love patches. And contributions. And spring rolls.

Development website / Bug Tracker:
 - https://tuleap.ring.cx/projects/ring/

Repositories are hosted on Gerrit, which we use for code review. It also
contains the client subprojects:
 - https://gerrit-ring.savoirfairelinux.com/#/admin/projects/

Do not hesitate to join us and post comments, suggestions, questions
and general feedback on the GNU Ring mailing-list:
https://lists.gnu.org/mailman/listinfo/ring

IRC (on #freenode):
 - #ring

  -- The GNU Ring Team
