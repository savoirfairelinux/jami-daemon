/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -m -c PresenceManagerInterface -i /Users/emmanuellepagevallee/dev/sflphone-kde/src/lib/dbus/metatypes.h -p presencemanager_dbus_interface /Users/emmanuellepagevallee/dev/sflphone-kde/src/lib/dbus/presencemanager-introspec.xml
 *
 * qdbusxml2cpp is Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef PRESENCEMANAGER_DBUS_INTERFACE_H_1416889973
#define PRESENCEMANAGER_DBUS_INTERFACE_H_1416889973

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include "/Users/emmanuellepagevallee/dev/sflphone-kde/src/lib/dbus/metatypes.h"

#include <conversions.hpp>
#include <sflphone.h>

/*
 * Proxy class for interface org.sflphone.SFLphone.PresenceManager
 */
class PresenceManagerInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    PresenceManagerInterface() {}

    ~PresenceManagerInterface() {}

public Q_SLOTS: // METHODS
    void answerServerRequest(const QString &uri, bool flag)
    {
        sflph_pres_answer_server_request(uri.toStdString(), flag);
    }

    VectorMapStringString getSubscriptions(const QString &accountID)
    {
        VectorMapStringString temp;
        for (auto x : sflph_pres_get_subscriptions(accountID.toStdString())) {
            temp.push_back(convertMap(x));
        }
        return temp;
    }

    void publish(const QString &accountID, bool status, const QString &note)
    {
        sflph_pres_publish(accountID.toStdString(), status, note.toStdString());
    }

    void setSubscriptions(const QString &accountID, const QStringList &uriList)
    {
        sflph_pres_set_subscriptions(accountID.toStdString(), uriList.toStdString());
    }

    void subscribeBuddy(const QString &accountID, const QString &uri, bool flag)
    {
        sflph_pres_subscribe_buddy(accountID.toStdString(), uri.toStdString(), flag);
    }

Q_SIGNALS: // SIGNALS
    void newBuddyNotification(const QString &accountID, const QString &buddyUri, bool status, const QString &lineStatus);
    void newServerSubscriptionRequest(const QString &buddyUri);
    void serverError(const QString &accountID, const QString &error, const QString &msg);
    void subscriptionStateChanged(const QString &accountID, const QString &buddyUri, bool state);
};

namespace org {
  namespace sflphone {
    namespace SFLphone {
      typedef ::PresenceManagerInterface PresenceManager;
    }
  }
}
#endif
