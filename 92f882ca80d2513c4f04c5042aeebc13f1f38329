{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3d42926c_76570379",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 220
      },
      "writtenOn": "2021-12-28T21:55:53Z",
      "side": 1,
      "message": "Fyi, I added a patch for the CI, to add a stage to test the build via meson and avoid any future regression and force devs to fix the meson.build file.\n\nAnd I added a small line in the README for users to know how to build the tests. If it\u0027s ok for you we can merge",
      "revId": "92f882ca80d2513c4f04c5042aeebc13f1f38329",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d648a64a_43b0a0cd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 610
      },
      "writtenOn": "2021-12-29T20:31:45Z",
      "side": 1,
      "message": "Surely it can be merged, but since a half of tests are failed, it is not very useful for regular users like me. I think the tests that should succeed without a special test enviroment should be grouped into a suite, so the call `meson test --suite local` can actually reveal regressions. What do you think? If you describe prerequisites and expected results for all tests, I will do it later.",
      "parentUuid": "3d42926c_76570379",
      "revId": "92f882ca80d2513c4f04c5042aeebc13f1f38329",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6bb51868_ad5c6fbf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 220
      },
      "writtenOn": "2021-12-29T20:36:00Z",
      "side": 1,
      "message": "In fact there seems to be a problem with meson + tests. It builds, but indeed a lot are failing. With autotools (the CI uses it) there is no issue. I\u0027ll try to check (I\u0027ll be on another project during at least 3 months with limited time on Jami)",
      "parentUuid": "d648a64a_43b0a0cd",
      "revId": "92f882ca80d2513c4f04c5042aeebc13f1f38329",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ec75a16_a3fcec2b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 610
      },
      "writtenOn": "2021-12-29T20:59:27Z",
      "side": 1,
      "message": "Also the test \"ut_sip_empty_offer\" can\u0027t be built (I commented it out).",
      "parentUuid": "6bb51868_ad5c6fbf",
      "revId": "92f882ca80d2513c4f04c5042aeebc13f1f38329",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d26214c_9e8e2eb7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 220
      },
      "writtenOn": "2021-12-29T21:01:35Z",
      "side": 1,
      "message": "Just for me, nothing to change, will check why the tests are failing with meson",
      "revId": "92f882ca80d2513c4f04c5042aeebc13f1f38329",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9e576c20_dc9e1806",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 610
      },
      "writtenOn": "2021-12-30T12:10:10Z",
      "side": 1,
      "message": "I started tests after cleaning (rm -rf ~/.local/share/jami; rm -rf ~/.config/jami*), and there is no more timeouts. The tests just require dring-sample.yml and jami-sample.yml (all except conversation* tests, which need an ready-to-use account, I suppose).\n\n 1/37 account_archive               FAIL            0.61s   killed by signal 6 SIGABRT\n\u003c...\u003e\n  terminate called after throwing an instance of \u0027CppUnit::Exception\u0027\n  what():  assertion failed\n- Expression: DRing::start(\"dring-sample.yml\")\n\n10/37 connection_manager            FAIL            0.54s   killed by signal 6 SIGABRT\n\u003c...\u003e\n  terminate called after throwing an instance of \u0027CppUnit::Exception\u0027\n  what():  assertion failed\n- Expression: DRing::start(\"jami-sample.yml\")",
      "revId": "92f882ca80d2513c4f04c5042aeebc13f1f38329",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2d48606_cede485b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 220
      },
      "writtenOn": "2021-12-30T14:55:55Z",
      "side": 1,
      "message": "oh no, just checked. In fact, tests indeed valid accounts, but they are generally provided by \"actors/*,yml\" inside test/unitTest\n\nautotools generates the binaries directly in the directory, here we move it to build/tests\n\nIdeally we should move actors in the directory where tests are generated (and add a line about the fact that actors/*.yml should be in the directory where we execute the tests",
      "parentUuid": "9e576c20_dc9e1806",
      "revId": "92f882ca80d2513c4f04c5042aeebc13f1f38329",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fca82577_f3e23972",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 610
      },
      "writtenOn": "2021-12-30T18:16:35Z",
      "side": 1,
      "message": "OK, I see. Meson can pass arguments and environment variables to tests, and set the working directory before execution. The source directory can be obtained with `meson.project_source_root()`. So the most simple solution looks like this:\n\ntest(..., workdir: meson.project_source_root() / \u0027test\u0027/ \u0027unitTest\u0027)\n\nWill fix it in January already. Happy New Year and holidays!",
      "parentUuid": "a2d48606_cede485b",
      "revId": "92f882ca80d2513c4f04c5042aeebc13f1f38329",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    }
  ]
}