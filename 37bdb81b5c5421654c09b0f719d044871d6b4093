{
  "comments": [
    {
      "key": {
        "uuid": "192a126e_014ef5ab",
        "filename": "src/jamidht/conversationrepository.cpp",
        "patchSetId": 30
      },
      "lineNbr": 718,
      "author": {
        "id": 5
      },
      "writtenOn": "2020-10-08T17:02:51Z",
      "side": 1,
      "message": "MAJOR SonarQube violation:\n\n\nValue stored to \u0027x\u0027 during its initialization is never read\n\n\nRead more: https://sonar-jami.savoirfairelinux.net/coding_rules#rule_key\u003dClangTidy%3Aclang-analyzer-deadcode.DeadStores",
      "revId": "37bdb81b5c5421654c09b0f719d044871d6b4093",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c3d5b84_ba20df11",
        "filename": "src/jamidht/jamiaccount.cpp",
        "patchSetId": 30
      },
      "lineNbr": 2266,
      "author": {
        "id": 5
      },
      "writtenOn": "2020-10-08T17:02:51Z",
      "side": 1,
      "message": "MINOR SonarQube violation:\n\n\n\u0027find_last_of\u0027 called with a string literal consisting of a single character; consider using the more effective overload accepting a character\n\n\nRead more: https://sonar-jami.savoirfairelinux.net/coding_rules#rule_key\u003dClangTidy%3Aperformance-faster-string-find",
      "revId": "37bdb81b5c5421654c09b0f719d044871d6b4093",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    }
  ]
}