{
  "comments": [
    {
      "key": {
        "uuid": "00f39216_29c02c94",
        "filename": "src/jamidht/conversationrepository.cpp",
        "patchSetId": 41
      },
      "lineNbr": 75,
      "author": {
        "id": 5
      },
      "writtenOn": "2020-10-07T21:15:28Z",
      "side": 1,
      "message": "MINOR SonarQube violation:\n\n\nthe const qualified parameter \u0027path\u0027 is copied for each invocation; consider making it a reference\n\n\nRead more: https://sonar-jami.savoirfairelinux.net/coding_rules#rule_key\u003dClangTidy%3Aperformance-unnecessary-value-param",
      "revId": "13c7de399e1f077b3be82439e47aea5115705bbd",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ca4e817_2e46ce15",
        "filename": "src/jamidht/conversationrepository.cpp",
        "patchSetId": 41
      },
      "lineNbr": 75,
      "author": {
        "id": 5
      },
      "writtenOn": "2020-10-07T21:15:42Z",
      "side": 1,
      "message": "MINOR SonarQube violation:\n\n\nthe const qualified parameter \u0027path\u0027 is copied for each invocation; consider making it a reference\n\n\nRead more: https://sonar-jami.savoirfairelinux.net/coding_rules#rule_key\u003dClangTidy%3Aperformance-unnecessary-value-param",
      "revId": "13c7de399e1f077b3be82439e47aea5115705bbd",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6bd8fb1_96699c52",
        "filename": "src/jamidht/conversationrepository.cpp",
        "patchSetId": 41
      },
      "lineNbr": 153,
      "author": {
        "id": 5
      },
      "writtenOn": "2020-10-07T21:15:28Z",
      "side": 1,
      "message": "MINOR SonarQube violation:\n\n\nstring concatenation results in allocation of unnecessary temporary strings; consider using \u0027operator+\u003d\u0027 or \u0027string::append()\u0027 instead\n\n\nRead more: https://sonar-jami.savoirfairelinux.net/coding_rules#rule_key\u003dClangTidy%3Aperformance-inefficient-string-concatenation",
      "revId": "13c7de399e1f077b3be82439e47aea5115705bbd",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "044f9caa_c8df0d47",
        "filename": "src/jamidht/conversationrepository.cpp",
        "patchSetId": 41
      },
      "lineNbr": 153,
      "author": {
        "id": 5
      },
      "writtenOn": "2020-10-07T21:15:42Z",
      "side": 1,
      "message": "MINOR SonarQube violation:\n\n\nstring concatenation results in allocation of unnecessary temporary strings; consider using \u0027operator+\u003d\u0027 or \u0027string::append()\u0027 instead\n\n\nRead more: https://sonar-jami.savoirfairelinux.net/coding_rules#rule_key\u003dClangTidy%3Aperformance-inefficient-string-concatenation",
      "revId": "13c7de399e1f077b3be82439e47aea5115705bbd",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4249740f_4736ba24",
        "filename": "src/jamidht/jamiaccount.h",
        "patchSetId": 41
      },
      "lineNbr": 473,
      "author": {
        "id": 5
      },
      "writtenOn": "2020-10-07T21:15:28Z",
      "side": 1,
      "message": "MINOR SonarQube violation:\n\n\nthe const qualified parameter \u0027socket\u0027 is copied for each invocation; consider making it a reference\n\n\nRead more: https://sonar-jami.savoirfairelinux.net/coding_rules#rule_key\u003dClangTidy%3Aperformance-unnecessary-value-param",
      "revId": "13c7de399e1f077b3be82439e47aea5115705bbd",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2bfdf4e6_2886105f",
        "filename": "src/jamidht/jamiaccount.h",
        "patchSetId": 41
      },
      "lineNbr": 473,
      "author": {
        "id": 5
      },
      "writtenOn": "2020-10-07T21:15:28Z",
      "side": 1,
      "message": "MINOR SonarQube violation:\n\n\nthe const qualified parameter \u0027socket\u0027 is copied for each invocation; consider making it a reference\n\n\nRead more: https://sonar-jami.savoirfairelinux.net/coding_rules#rule_key\u003dClangTidy%3Aperformance-unnecessary-value-param",
      "revId": "13c7de399e1f077b3be82439e47aea5115705bbd",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e66a55ff_daebdb71",
        "filename": "src/jamidht/jamiaccount.h",
        "patchSetId": 41
      },
      "lineNbr": 473,
      "author": {
        "id": 5
      },
      "writtenOn": "2020-10-07T21:15:42Z",
      "side": 1,
      "message": "MINOR SonarQube violation:\n\n\nthe const qualified parameter \u0027socket\u0027 is copied for each invocation; consider making it a reference\n\n\nRead more: https://sonar-jami.savoirfairelinux.net/coding_rules#rule_key\u003dClangTidy%3Aperformance-unnecessary-value-param",
      "revId": "13c7de399e1f077b3be82439e47aea5115705bbd",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cbc1b12d_449e9aff",
        "filename": "src/jamidht/jamiaccount.h",
        "patchSetId": 41
      },
      "lineNbr": 473,
      "author": {
        "id": 5
      },
      "writtenOn": "2020-10-07T21:15:42Z",
      "side": 1,
      "message": "MINOR SonarQube violation:\n\n\nthe const qualified parameter \u0027socket\u0027 is copied for each invocation; consider making it a reference\n\n\nRead more: https://sonar-jami.savoirfairelinux.net/coding_rules#rule_key\u003dClangTidy%3Aperformance-unnecessary-value-param",
      "revId": "13c7de399e1f077b3be82439e47aea5115705bbd",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04878706_6f67b9e4",
        "filename": "src/jamidht/multiplexed_socket.cpp",
        "patchSetId": 41
      },
      "lineNbr": 312,
      "author": {
        "id": 5
      },
      "writtenOn": "2020-10-07T21:15:28Z",
      "side": 1,
      "message": "MAJOR SonarQube violation:\n\n\nformat specifies type \u0027unsigned int\u0027 but the argument has type \u0027std::vector::size_type\u0027 (aka \u0027unsigned long\u0027)\n\n\nRead more: https://sonar-jami.savoirfairelinux.net/coding_rules#rule_key\u003dClangTidy%3Aclang-diagnostic-format",
      "revId": "13c7de399e1f077b3be82439e47aea5115705bbd",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "095ab440_ac458689",
        "filename": "src/jamidht/multiplexed_socket.cpp",
        "patchSetId": 41
      },
      "lineNbr": 312,
      "author": {
        "id": 5
      },
      "writtenOn": "2020-10-07T21:15:42Z",
      "side": 1,
      "message": "MAJOR SonarQube violation:\n\n\nformat specifies type \u0027unsigned int\u0027 but the argument has type \u0027std::vector::size_type\u0027 (aka \u0027unsigned long\u0027)\n\n\nRead more: https://sonar-jami.savoirfairelinux.net/coding_rules#rule_key\u003dClangTidy%3Aclang-diagnostic-format",
      "revId": "13c7de399e1f077b3be82439e47aea5115705bbd",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    }
  ]
}