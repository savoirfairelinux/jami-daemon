{
  "comments": [
    {
      "key": {
        "uuid": "88939256_327f2c88",
        "filename": "src/sip/sip_utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 235,
      "author": {
        "id": 5
      },
      "writtenOn": "2021-05-20T13:10:51Z",
      "side": 1,
      "message": "CRITICAL SonarQube violation:\n\n\nnon-constant-expression cannot be narrowed from type \u0027pj_ssize_t\u0027 (aka \u0027long\u0027) to \u0027std::__cxx11::basic_string\u003cchar, std::char_traits\u003cchar\u003e, std::allocator\u003cchar\u003e \u003e::size_type\u0027 (aka \u0027unsigned long\u0027) in initializer list\n\n\nRead more: https://sonar-jami.savoirfairelinux.net/coding_rules#rule_key\u003dClangTidy%3Aclang-diagnostic-c%2B%2B11-narrowing",
      "revId": "373b76e8ad70f6077997ae4f3ec076e89c523c7c",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6e52dce_45dee468",
        "filename": "src/sip/sipcall.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1514,
      "author": {
        "id": 5
      },
      "writtenOn": "2021-05-20T13:10:51Z",
      "side": 1,
      "message": "MINOR SonarQube violation:\n\n\n\u0027find\u0027 called with a string literal consisting of a single character; consider using the more effective overload accepting a character\n\n\nRead more: https://sonar-jami.savoirfairelinux.net/coding_rules#rule_key\u003dClangTidy%3Aperformance-faster-string-find",
      "revId": "373b76e8ad70f6077997ae4f3ec076e89c523c7c",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4afbf679_6210ebdb",
        "filename": "src/sip/sipcall.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1520,
      "author": {
        "id": 5
      },
      "writtenOn": "2021-05-20T13:10:51Z",
      "side": 1,
      "message": "MINOR SonarQube violation:\n\n\n\u0027find\u0027 called with a string literal consisting of a single character; consider using the more effective overload accepting a character\n\n\nRead more: https://sonar-jami.savoirfairelinux.net/coding_rules#rule_key\u003dClangTidy%3Aperformance-faster-string-find",
      "revId": "373b76e8ad70f6077997ae4f3ec076e89c523c7c",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a",
      "unresolved": false
    }
  ]
}